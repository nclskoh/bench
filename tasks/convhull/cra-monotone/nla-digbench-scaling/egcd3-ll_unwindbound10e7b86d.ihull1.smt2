(declare-const x Int)
(declare-const |tmp___0'| Int)
(declare-const term_to_project_onto0 Real)
(declare-const term_to_project_onto2 Real)
(declare-const s Int)
(declare-const term_to_project_onto Real)
(declare-const |v'0| Int)
(declare-const term_to_project_onto3 Real)
(declare-const uninterp4 Int)
(declare-const counter Int)
(declare-const b Int)
(declare-const uninterp2 Int)
(declare-const v Int)
(declare-const k Int)
(declare-const |d'| Int)
(declare-const |tmp'0| Int)
(declare-const K Int)
(declare-const |v'| Int)
(declare-const c Int)
(declare-const a Int)
(declare-const uninterp Int)
(declare-const |counter'0| Int)
(declare-const |counter'| Int)
(declare-const |d'0| Int)
(declare-const term_to_project_onto1 Real)
(declare-const term_to_project_onto4 Real)
(declare-const tmp___0 Int)
(declare-const |tmp'| Int)
(declare-const term_to_project_onto5 Real)
(declare-const p Int)
(declare-const r Int)
(declare-const q Int)
(declare-const uninterp0 Int)
(declare-const tmp Int)
(declare-const |c'| Int)
(declare-const d Int)
(declare-const uninterp1 Int)
(declare-const |k'| Int)
(declare-const y Int)
(declare-const uninterp3 Int)
(assert (and (<= (- k) 0) (<= (+ (- counter) 1) 0) (<= (+ (- y) 1) 0)
               (<= (+ (- x) 1) 0) (<= (+ counter -9) 0) (<= (+ (- c) b) 0)
               (= (+ (- |counter'0|) K counter 1) 0) (<= (+ (- |d'0|) K 1) 0)
               (or (and (= K 0) (= (+ (- |tmp'0|) tmp) 0)
                          (= (+ (- |v'0|) b) 0) (= (+ (- |d'0|) 1) 0)
                          (= (+ (- |counter'0|) counter 1) 0))
                     (and (<= (+ (- K) 1) 0) (<= (+ counter -8) 0)
                            (<= (- k) 0) (<= (+ (- c) (* 2 b)) 0)
                            (<= (+ r p (- a)) 0) (<= (+ q s (- b)) 0)
                            (<= (- counter) 0) (<= (+ (- y) 1) 0)
                            (<= (+ (- x) 1) 0)
                            (= (+ |tmp'0| (- |counter'0|) 1) 0)
                            (<= (+ (- |v'0|) (* 2 b)) 0)
                            (<= (+ |counter'0| -10) 0) (<= (+ (- |d'0|) 2) 0)
                            (<= (+ (- |counter'0|) 2) 0) (<= (- k) 0)
                            (<= (+ |v'0| (- c)) 0) (<= (+ r p (- a)) 0)
                            (<= (+ q s (- b)) 0) (<= (+ (- y) 1) 0)
                            (<= (+ (- x) 1) 0))) (<= (- K) 0)
               (<= (+ (- |d'0|) 1) 0) (<= (- k) 0)
               (<= (+ (- |counter'0|) 1) 0) (<= (+ (- y) 1) 0)
               (<= (+ (- x) 1) 0)
               (or (and (<= (+ |counter'0| -9) 0)
                          (= (+ a (- uninterp) (- uninterp0)) 0)
                          (= (+ b (- uninterp1) (- uninterp2)) 0)
                          (= (+ a (- c) (- uninterp3)) 0)
                          (= (+ |v'0| (- uninterp4)) 0)
                          (<= (+ (* -2 |v'0|) c 1) 0))
                     (<= (+ (- |counter'0|) 10) 0))
               (= (+ |tmp___0'| (- counter)) 0)
               (= (+ |tmp'| (- |counter'0|)) 0) (= (+ |v'| (- |v'0|)) 0)
               (= (+ |d'| (- |d'0|)) 0) (= (+ |k'| (- |d'0|) (- k)) 0)
               (= (+ |c'| |v'0| (- c)) 0)
               (= (+ |counter'| (- |counter'0|) -1) 0) (<= b uninterp4)
               (<= s uninterp2) (<= q uninterp1) (<= r uninterp0)
               (<= p uninterp)
               (= term_to_project_onto5 (+ |counter'| (- counter)))
               (= term_to_project_onto4 (+ |c'| (- c)))
               (= term_to_project_onto3 (+ |k'| (- k)))
               (= term_to_project_onto2 (+ |d'| (- d)))
               (= term_to_project_onto1 (+ |v'| (- v)))
               (= term_to_project_onto0 (+ |tmp'| (- tmp)))
               (= term_to_project_onto (+ |tmp___0'| (- tmp___0)))))
(check-sat)
