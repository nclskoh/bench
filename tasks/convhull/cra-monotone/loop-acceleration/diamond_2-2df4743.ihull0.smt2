(declare-const x Int)
(declare-const rem4 Int)
(declare-const rem7 Int)
(declare-const phi_x1 Int)
(declare-const phi_x0 Int)
(declare-const phi_x3 Int)
(declare-const rem1 Int)
(declare-const rem3 Int)
(declare-const term_to_project_onto Real)
(declare-const phi_x5 Int)
(declare-const phi_x Int)
(declare-const rem0 Int)
(declare-const rem Int)
(declare-const rem2 Int)
(declare-const rem8 Int)
(declare-const phi_x2 Int)
(declare-const rem5 Int)
(declare-const rem6 Int)
(declare-const y Int)
(declare-const phi_x4 Int)
(declare-const |x'| Int)
(assert (and (<= (- y) 0) (<= (+ x -98) 0)
               (or (and (or (<= y 0)
                              (and (<= (- rem) 0)
                                     (or (<= (+ rem 1) 0)
                                           (<= (+ (- rem) 1) 0))
                                     (or (<= (+ rem -1) 0) (<= (+ rem 1) 0))
                                     (is_int (/ (+ y (- rem)) 2))))
                          (= (+ (- phi_x) x 1) 0))
                     (and (is_int (/ y 2)) (<= (- y) 0)
                            (= (+ (- phi_x) x 2) 0)))
               (or (and (or (<= y 0)
                              (and (<= (- rem0) 0)
                                     (or (<= (+ rem0 1) 0)
                                           (<= (+ (- rem0) 1) 0))
                                     (or (<= (+ rem0 -1) 0) (<= (+ rem0 1) 0))
                                     (is_int (/ (+ y (- rem0)) 2))))
                          (= (+ (- phi_x0) phi_x -2) 0))
                     (and (is_int (/ y 2)) (<= (- y) 0)
                            (= (+ (- phi_x0) phi_x 2) 0)))
               (or (<= y 0)
                     (and (<= (- rem1) 0)
                            (or (<= (+ rem1 1) 0) (<= (+ (- rem1) 1) 0))
                            (or (<= (+ rem1 -1) 0) (<= (+ rem1 1) 0))
                            (is_int (/ (+ y (- rem1)) 2)))
                     (and (is_int (/ y 2)) (<= (- y) 0)))
               (or (and (or (<= y 0)
                              (and (<= (- rem2) 0)
                                     (or (<= (+ rem2 1) 0)
                                           (<= (+ (- rem2) 1) 0))
                                     (or (<= (+ rem2 -1) 0) (<= (+ rem2 1) 0))
                                     (is_int (/ (+ y (- rem2)) 2))))
                          (= (+ (- phi_x1) phi_x0) 0))
                     (and (is_int (/ y 2)) (<= (- y) 0)
                            (= (+ (- phi_x1) phi_x0 4) 0)))
               (or (<= y 0)
                     (and (<= (- rem3) 0)
                            (or (<= (+ rem3 1) 0) (<= (+ (- rem3) 1) 0))
                            (or (<= (+ rem3 -1) 0) (<= (+ rem3 1) 0))
                            (is_int (/ (+ y (- rem3)) 2)))
                     (and (is_int (/ y 2)) (<= (- y) 0)))
               (or (and (or (<= y 0)
                              (and (<= (- rem4) 0)
                                     (or (<= (+ rem4 1) 0)
                                           (<= (+ (- rem4) 1) 0))
                                     (or (<= (+ rem4 -1) 0) (<= (+ rem4 1) 0))
                                     (is_int (/ (+ y (- rem4)) 2))))
                          (= (+ (- phi_x2) phi_x1 -2) 0))
                     (and (is_int (/ y 2)) (<= (- y) 0)
                            (= (+ (- phi_x2) phi_x1 4) 0)))
               (or (and (or (<= y 0)
                              (and (<= (- rem5) 0)
                                     (or (<= (+ rem5 1) 0)
                                           (<= (+ (- rem5) 1) 0))
                                     (or (<= (+ rem5 -1) 0) (<= (+ rem5 1) 0))
                                     (is_int (/ (+ y (- rem5)) 2))))
                          (= (+ (- phi_x3) phi_x2 4) 0))
                     (and (is_int (/ y 2)) (<= (- y) 0)
                            (= (+ (- phi_x3) phi_x2 2) 0)))
               (or (<= y 0)
                     (and (<= (- rem6) 0)
                            (or (<= (+ rem6 1) 0) (<= (+ (- rem6) 1) 0))
                            (or (<= (+ rem6 -1) 0) (<= (+ rem6 1) 0))
                            (is_int (/ (+ y (- rem6)) 2)))
                     (and (is_int (/ y 2)) (<= (- y) 0)))
               (or (and (or (<= y 0)
                              (and (<= (- rem7) 0)
                                     (or (<= (+ rem7 1) 0)
                                           (<= (+ (- rem7) 1) 0))
                                     (or (<= (+ rem7 -1) 0) (<= (+ rem7 1) 0))
                                     (is_int (/ (+ y (- rem7)) 2))))
                          (= (+ (- phi_x4) phi_x3 -2) 0))
                     (and (is_int (/ y 2)) (<= (- y) 0)
                            (= (+ (- phi_x4) phi_x3 4) 0)))
               (or (and (or (<= y 0)
                              (and (<= (- rem8) 0)
                                     (or (<= (+ rem8 1) 0)
                                           (<= (+ (- rem8) 1) 0))
                                     (or (<= (+ rem8 -1) 0) (<= (+ rem8 1) 0))
                                     (is_int (/ (+ y (- rem8)) 2))))
                          (= (+ (- phi_x5) phi_x4 -4) 0))
                     (and (is_int (/ y 2)) (<= (- y) 0)
                            (= (+ (- phi_x5) phi_x4 2) 0)))
               (= (+ |x'| (- phi_x5)) 0)
               (= term_to_project_onto (+ |x'| (- x)))))
(check-sat)
