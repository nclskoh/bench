(declare-const term_to_project_onto2 Real)
(declare-const phi_y Int)
(declare-const |x'| Int)
(declare-const phi_x Int)
(declare-const rem Int)
(declare-const phi_y0 Int)
(declare-const tmp___0 Int)
(declare-const rem0 Int)
(declare-const phi_x0 Int)
(declare-const term_to_project_onto0 Real)
(declare-const |tmp___1'| Int)
(declare-const havoc Int)
(declare-const havoc0 Int)
(declare-const y Int)
(declare-const |tmp___0'| Int)
(declare-const phi_tmp___0 Int)
(declare-const phi_x1 Int)
(declare-const phi_tmp___00 Int)
(declare-const term_to_project_onto1 Real)
(declare-const x Int)
(declare-const tmp___1 Int)
(declare-const |y'| Int)
(declare-const term_to_project_onto Real)
(assert (and (<= (- y) 0) (or (<= (+ havoc 1) 0) (<= (+ (- havoc) 1) 0))
               (or (and (or (<= x 0)
                              (and (<= (- rem) 0)
                                     (or (<= rem 0) (<= (+ (- rem) 2) 0))
                                     (or (<= (+ rem -2) 0) (<= (+ rem 2) 0))
                                     (is_int (/ (+ x (- rem)) 3))))
                          (or (and (or (<= x 0)
                                         (and (<= (- rem0) 0)
                                                (or (<= (+ rem0 -1) 0)
                                                      (<= (+ (- rem0) 3) 0))
                                                (or (<= (+ rem0 -2) 0)
                                                      (<= (+ rem0 2) 0))
                                                (is_int (/ (+ x (- rem0)) 3))))
                                     (or (and (= havoc0 0)
                                                (= (+ (- phi_x) x 5) 0))
                                           (and (or (<= (+ havoc0 1) 0)
                                                      (<= (+ (- havoc0) 1) 0))
                                                  (= (+ (- phi_x) x 4) 0)))
                                     (= (+ (- phi_x0) phi_x) 0)
                                     (= (+ (- phi_y) 1) 0)
                                     (= (+ (- phi_tmp___0) havoc0) 0))
                                (and (is_int (/ (+ x -2) 3)) (<= (- x) 0)
                                       (= (+ (- phi_x0) x 1) 0)
                                       (= (- phi_y) 0)
                                       (= (+ tmp___0 (- phi_tmp___0)) 0)))
                          (= (+ (- phi_x1) phi_x0) 0)
                          (= (+ (- phi_y0) phi_y) 0)
                          (= (+ (- phi_tmp___00) phi_tmp___0) 0))
                     (and (is_int (/ (+ x -1) 3)) (<= (- x) 0)
                            (= (+ (- phi_x1) x 2) 0) (= (- phi_y0) 0)
                            (= (+ (- phi_tmp___00) tmp___0) 0)))
               (= (+ |tmp___1'| (- havoc)) 0)
               (= (+ |tmp___0'| (- phi_tmp___00)) 0)
               (= (+ |y'| (- phi_y0)) 0) (= (+ |x'| (- phi_x1)) 0)
               (= term_to_project_onto2 (+ |x'| (- x)))
               (= term_to_project_onto1 (+ |y'| (- y)))
               (= term_to_project_onto0 (+ |tmp___0'| (- tmp___0)))
               (= term_to_project_onto (+ |tmp___1'| (- tmp___1)))))
(check-sat)
