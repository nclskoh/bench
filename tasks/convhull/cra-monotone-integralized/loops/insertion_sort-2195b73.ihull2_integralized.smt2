(declare-const |i'0| Int)
(declare-const key Int)
(declare-const j Int)
(declare-const SIZE Int)
(declare-const tr Int)
(declare-const |key'| Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const |j'| Int)
(declare-const |i'| Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const i Int)
(declare-const tr0 Int)
(declare-const K Int)
(assert (and (<= (+ (- j) 1) 0) (<= (- SIZE) 0) (<= (+ (- SIZE) j 1) 0)
               (= (+ (- |i'0|) (- K) j -1) 0)
               (or (and (= K 0) (= (+ (- |i'0|) j -1) 0))
                     (and (<= (+ (- K) 1) 0) (<= (+ (- j) 1) 0)
                            (<= (+ (- |i'0|) -1) 0))) (<= (- K) 0)
               (or (<= (+ |i'0| 1) 0)
                     (and (<= (- |i'0|) 0) (<= (+ (- tr) tr0) 0)))
               (= (+ |key'| (- tr)) 0) (= (+ |j'| (- j) -1) 0)
               (= (+ |i'| (- |i'0|)) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |i'| (- i)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |j'| (- j)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |key'| (- key)))) 0)))
(check-sat)