(declare-const B Int)
(declare-const term_to_project_onto0 Real)
(declare-const |r'| Int)
(declare-const term_to_project_onto1 Real)
(declare-const A Int)
(declare-const r Int)
(declare-const phi_r Int)
(declare-const p Int)
(declare-const uninterp0 Int)
(declare-const |d'| Int)
(declare-const |p'| Int)
(declare-const term_to_project_onto2 Real)
(declare-const phi_q Int)
(declare-const term_to_project_onto Real)
(declare-const d Int)
(declare-const q Int)
(declare-const |q'| Int)
(declare-const uninterp Int)
(assert (and (<= (+ (- p) 1) 0) (<= (+ (- d) 1) 0) (<= (- q) 0)
               (<= (+ (- B) 1) 0) (= (+ (- B) 1) 0) (= (+ (- r) A (- q)) 0)
               (= (+ d (- p)) 0) (= (+ (- r) A (- uninterp)) 0)
               (= (+ d (- uninterp0)) 0) (or (<= p 0) (<= (+ (- p) 2) 0))
               (or (and (<= (+ 2
                                 (ite (and (<= (- d) 0) (<= 0 d)) (mod 
                                      d 2) (+ (mod d 2) -2)) (* 2 r) (- 
                                 d)) 0) (= (+ (- phi_r) r) 0)
                          (= (+ (- phi_q) q) 0))
                     (and (<= (+ (- (ite (and (<= (- d) 0) (<= 0 d))
                                         (mod d 2) (+ (mod d 2) -2)))
                                   (- (* 2 r)) d) 0)
                            (= (+ (- (* 2 phi_r))
                                    (ite (and (<= (- d) 0) (<= 0 d))
                                         (mod d 2) (+ (mod d 2) -2)) (* 
                                    2 r) (- d)) 0)
                            (= (+ (- (ite (and (<= (- p) 0) (<= 0 p))
                                          (mod p 2) (+ (mod p 2) -2)))
                                    (- (* 2 phi_q)) (* 2 q) p) 0)))
               (= (+ |q'| (- phi_q)) 0)
               (= (+ (ite (and (<= (- p) 0) (<= 0 p)) (mod p 2)
                          (+ (mod p 2) -2)) (* 2 |p'|) (- p)) 0)
               (= (+ (* 2 |d'|)
                       (ite (and (<= (- d) 0) (<= 0 d)) (mod d 2)
                            (+ (mod d 2) -2)) (- d)) 0)
               (= (+ |r'| (- phi_r)) 0) (<= 2 uninterp0) (<= p uninterp0)
               (<= (* 2 B) uninterp0) (<= uninterp0 p) (<= 0 uninterp)
               (<= q uninterp) (<= uninterp q)
               (= term_to_project_onto2 (+ |r'| (- r)))
               (= term_to_project_onto1 (+ |d'| (- d)))
               (= term_to_project_onto0 (+ |p'| (- p)))
               (= term_to_project_onto (+ |q'| (- q)))))
(check-sat)
