(declare-const right Int)
(declare-const space Int)
(declare-const term_to_project_onto0 Real)
(declare-const |space'| Int)
(declare-const term_to_project_onto Real)
(declare-const |right'| Int)
(declare-const K Int)
(declare-const |right'0| Int)
(declare-const n Int)
(assert (and (<= (+ (- space) 1) 0)
               (<= (+ (- |right'0|) (* 2 K) (* 2 space) -1) 0)
               (or (and (= K 0) (= (+ (- |right'0|) (* 2 space) -1) 0))
                     (and (<= (+ (- K) 1) 0) (<= (+ (- space) 1) 0)
                            (<= (+ (- space) 1) 0)
                            (<= (+ (- n) (* 2 space)) 0)
                            (<= (+ (- |right'0|) (* 2 space) 1) 0)
                            (<= (+ (- space) 1) 0)
                            (<= (+ (- n) |right'0| (* -2 space) 1) 0)))
               (<= (- K) 0) (<= (+ (- |right'0|) 1) 0) (<= (+ (- space) 1) 0)
               (<= (+ n (- |right'0|)) 0)
               (= (+ (ite (and (<= (- space) 0) (<= 0 space)) (mod space 2)
                          (+ (mod space 2) -2)) (* 2 |space'|) (- space)) 0)
               (= (+ |right'| (- |right'0|)) 0)
               (= term_to_project_onto0 (+ |right'| (- right)))
               (= term_to_project_onto (+ |space'| (- space)))))
(check-sat)
