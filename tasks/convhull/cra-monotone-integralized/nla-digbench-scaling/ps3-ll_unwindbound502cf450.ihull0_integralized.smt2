(declare-const counter Int)
(declare-const c Int)
(declare-const y Int)
(declare-const uninterp0 Int)
(declare-const term_to_project_onto3_integralized Int)
(declare-const k Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const |x'| Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const |tmp'| Int)
(declare-const term_to_project_onto2_integralized Int)
(declare-const |c'| Int)
(declare-const |counter'| Int)
(declare-const |y'| Int)
(declare-const uninterp Int)
(declare-const tmp Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const x Int)
(assert (and (<= (- c) 0) (<= (- y) 0) (= (+ y (- c)) 0)
               (<= (+ counter -49) 0)
               (= (+ (* 6 x) (* -2 uninterp0) (* -3 uninterp) (- y)) 0)
               (<= (+ (- k) c 1) 0) (= (+ |tmp'| (- counter)) 0)
               (= (+ |c'| (- c) -1) 0)
               (= (+ |x'| (- x) (- uninterp) (* -2 y) -1) 0)
               (= (+ |y'| (- y) -1) 0) (= (+ |counter'| (- counter) -1) 0)
               (<= (- uninterp0) 0) (<= (- uninterp) 0)
               (= (+ term_to_project_onto3_integralized
                       (- (+ |counter'| (- counter)))) 0)
               (= (+ term_to_project_onto2_integralized (- (+ |y'| (- y)))) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |x'| (- x)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |c'| (- c)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |tmp'| (- tmp)))) 0)))
(check-sat)