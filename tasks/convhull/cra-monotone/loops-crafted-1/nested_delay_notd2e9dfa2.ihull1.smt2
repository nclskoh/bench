(declare-const c Int)
(declare-const |a'| Int)
(declare-const phi_b1 Int)
(declare-const phi_tmp Int)
(declare-const phi_a1 Int)
(declare-const |tmp'| Int)
(declare-const |c'0| Int)
(declare-const term_to_project_onto Real)
(declare-const |d'| Int)
(declare-const last Int)
(declare-const a Int)
(declare-const phi_tmp0 Int)
(declare-const term_to_project_onto3 Real)
(declare-const st Int)
(declare-const phi_d1 Int)
(declare-const term_to_project_onto0 Real)
(declare-const phi_a0 Int)
(declare-const term_to_project_onto1 Real)
(declare-const phi_b0 Int)
(declare-const d Int)
(declare-const |st'| Int)
(declare-const K Int)
(declare-const term_to_project_onto2 Real)
(declare-const term_to_project_onto4 Real)
(declare-const tmp Int)
(declare-const phi_a Int)
(declare-const phi_b Int)
(declare-const |b'| Int)
(declare-const phi_d0 Int)
(declare-const phi_a2 Int)
(declare-const phi_d Int)
(declare-const |c'| Int)
(declare-const b Int)
(declare-const SIZE Int)
(declare-const |st'0| Int)
(assert (and (<= (- d) 0) (<= (- st) 0) (<= (- b) 0) (<= (- a) 0)
               (<= (+ (- SIZE) 1) 0) (<= (- c) 0) (<= (+ (- last) 1) 0)
               (= (+ (- SIZE) 20) 0) (= (+ (- |c'0|) K) 0)
               (<= (+ |st'0| -1) 0)
               (or (and (= K 0) (= (+ (- |st'0|) 1) 0) (= (- |c'0|) 0))
                     (and (<= (+ (- K) 1) 0) (= (+ SIZE -20) 0)
                            (<= (+ (- last) 1) 0) (= (+ SIZE -20) 0)
                            (<= (+ |c'0| -20) 0) (<= (- |st'0|) 0)
                            (<= (+ (- |c'0|) 1) 0) (<= (+ (- last) 1) 0)))
               (<= (- K) 0) (<= (- |st'0|) 0) (<= (+ (- SIZE) 1) 0)
               (<= (- |c'0|) 0) (<= (+ (- last) 1) 0) (= (+ (- SIZE) 20) 0)
               (<= (+ (- |c'0|) SIZE) 0)
               (or (and (= |st'0| 0)
                          (or (and (or (<= (+ |c'0| (- last)) 0)
                                         (<= (+ (- |c'0|) last 2) 0))
                                     (= (+ (- phi_a) a 2) 0)
                                     (= (+ (- phi_b) b 2) 0))
                                (and (= (+ |c'0| (- last) -1) 0)
                                       (= (+ (- phi_a) a 3) 0)
                                       (= (+ (- phi_b) b 3) 0)))
                          (= (+ (- phi_a0) phi_a) 0)
                          (= (+ (- phi_b0) phi_b) 0))
                     (and (or (<= (+ |st'0| 1) 0) (<= (+ (- |st'0|) 1) 0))
                            (= (+ (- phi_a0) a 2) 0) (= (+ (- phi_b0) b 2) 0)))
               (or (and (= (+ |c'0| (- last)) 0) (= |st'0| 0)
                          (= (+ (- phi_a1) phi_a0 1) 0) (= (+ (- phi_d) d) 0))
                     (and (or (<= (+ |c'0| (- last) 1) 0)
                                (<= (+ (- |c'0|) last 1) 0)
                                (and (= (+ |c'0| (- last)) 0)
                                       (or (<= (+ |st'0| 1) 0)
                                             (<= (+ (- |st'0|) 1) 0))))
                            (or (and (= (+ |st'0| -1) 0)
                                       (or (and (<= (+ last (- SIZE) 1) 0)
                                                  (= (+ (- phi_d0) d) 0))
                                             (and (<= (+ (- last) SIZE) 0)
                                                    (= (+ (- phi_d0) d 1) 0)))
                                       (= (+ (- phi_d1) phi_d0) 0))
                                  (and (or (<= |st'0| 0)
                                             (<= (+ (- |st'0|) 2) 0))
                                         (= (+ (- phi_d1) d) 0)))
                            (= (+ (- phi_a1) phi_a0) 0)
                            (= (+ phi_d1 (- phi_d)) 0)))
               (or (and (or (<= (+ phi_d (- SIZE) 1) 0)
                              (<= (+ (- phi_d) SIZE 1) 0))
                          (= (+ (- phi_a2) phi_a1) 0)
                          (= (+ (- phi_b1) phi_b0) 0))
                     (and (= (+ phi_d (- SIZE)) 0) (= (- phi_a2) 0)
                            (= (+ (- phi_b1) 1) 0)))
               (or (and (= (+ (- phi_b1) phi_a2) 0)
                          (or (and (or (<= (+ |c'0| (- SIZE) 1) 0)
                                         (<= (+ (- |c'0|) SIZE 1) 0))
                                     (= (- phi_tmp) 0))
                                (and (= (+ |c'0| (- SIZE)) 0)
                                       (= (+ (- phi_tmp) 1) 0)))
                          (= (+ (- phi_tmp0) phi_tmp) 0))
                     (and (or (<= (+ (- phi_b1) phi_a2 1) 0)
                                (<= (+ phi_b1 (- phi_a2) 1) 0))
                            (= (- phi_tmp0) 0)))
               (or (<= (+ phi_tmp0 1) 0) (<= (+ (- phi_tmp0) 1) 0))
               (= (+ |tmp'| (- phi_tmp0)) 0) (= (+ |d'| (- phi_d)) 0)
               (= (+ |st'| (- |st'0|)) 0) (= (+ |c'| (- |c'0|)) 0)
               (= (+ |b'| (- phi_b1)) 0) (= (+ |a'| (- phi_a2)) 0)
               (= term_to_project_onto4 (+ |a'| (- a)))
               (= term_to_project_onto3 (+ |b'| (- b)))
               (= term_to_project_onto2 (+ |c'| (- c)))
               (= term_to_project_onto1 (+ |st'| (- st)))
               (= term_to_project_onto0 (+ |d'| (- d)))
               (= term_to_project_onto (+ |tmp'| (- tmp)))))
(check-sat)
