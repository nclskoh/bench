(declare-const n Int)
(declare-const j Int)
(declare-const i Int)
(declare-const |k'0| Int)
(declare-const phi_k Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const |k'| Int)
(declare-const k Int)
(declare-const |tmp'| Int)
(declare-const tmp Int)
(declare-const |j'| Int)
(declare-const K Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const havoc Int)
(assert (and (<= (- j) 0) (<= (- i) 0) (<= (+ (- n) 1) 0)
               (<= (+ (- n) j 1) 0)
               (or (and (or (<= (+ havoc 1) 0) (<= (+ (- havoc) 1) 0))
                          (= (+ (- |k'0|) K j) 0)
                          (or (and (= K 0) (= (+ (- |k'0|) j) 0))
                                (and (<= (+ (- K) 1) 0) (<= (- i) 0)
                                       (<= (+ (* 2 i) (- j)) 0)
                                       (<= (+ (- n) j 1) 0)
                                       (<= (+ (- |k'0|) (* 2 i) 1) 0)
                                       (<= (- i) 0) (<= (+ |k'0| (- n)) 0)))
                          (<= (- K) 0) (<= (- i) 0) (<= (- |k'0|) 0)
                          (<= (+ (- n) 1) 0) (<= (+ (- |k'0|) n) 0)
                          (= (+ (- phi_k) |k'0|) 0))
                     (and (= havoc 0) (<= (+ (- k) n) 0) (<= (+ k (- n)) 0)
                            (= (+ k (- phi_k)) 0)))
               (= (+ |tmp'| (- havoc)) 0) (= (+ |k'| (- phi_k)) 0)
               (= (+ |j'| (- j) -1) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |j'| (- j)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |k'| (- k)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |tmp'| (- tmp)))) 0)))
(check-sat)