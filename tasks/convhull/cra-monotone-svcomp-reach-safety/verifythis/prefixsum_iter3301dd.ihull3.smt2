(declare-const right Int)
(declare-const term_to_project_onto0 Real)
(declare-const term_to_project_onto Real)
(assert (exists
         ((|space'?1| Int) (|right'?2| Int) (K?3 Int) (|right'?4| Int)
            (space?5 Int) (n?6 Int))
         (and (<= (+ (- space?5) 1) 0)
                (<= (+ (- |right'?2|) (* 2 K?3) (* 2 space?5) -1) 0)
                (or (and (= K?3 0) (= (+ (- |right'?2|) (* 2 space?5) -1) 0))
                      (and (<= (+ (- K?3) 1) 0) (<= (+ (- space?5) 1) 0)
                             (<= (+ (- space?5) 1) 0)
                             (<= (+ (- n?6) (* 2 space?5)) 0)
                             (<= (+ (- |right'?2|) (* 2 space?5) 1) 0)
                             (<= (+ (- space?5) 1) 0)
                             (<= (+ (- n?6) |right'?2| (* -2 space?5) 1) 0)))
                (<= (- K?3) 0) (<= (+ (- |right'?2|) 1) 0)
                (<= (+ (- space?5) 1) 0) (<= (+ n?6 (- |right'?2|)) 0)
                (= (+ (ite (and (<= (- space?5) 0) (<= 0 space?5))
                           (mod space?5 2) (+ (mod space?5 2) -2))
                        (* 2 |space'?1|) (- space?5)) 0)
                (= (+ |right'?4| (- |right'?2|)) 0)
                (= term_to_project_onto0 (+ |right'?4| (- right)))
                (= term_to_project_onto (+ |space'?1| (- space?5))))))
(check-sat)
