(declare-const |l'| Int)
(declare-const |i'| Int)
(declare-const term_to_project_onto2 Real)
(declare-const rem Int)
(declare-const term_to_project_onto0 Real)
(declare-const |k'| Int)
(declare-const term_to_project_onto Real)
(declare-const n Int)
(declare-const k Int)
(declare-const phi_k0 Int)
(declare-const phi_j Int)
(declare-const term_to_project_onto1 Real)
(declare-const |j'| Int)
(declare-const phi_k Int)
(declare-const i Int)
(declare-const phi_j0 Int)
(declare-const j Int)
(declare-const l Int)
(declare-const rem0 Int)
(declare-const phi_i Int)
(assert (and (<= (- i) 0) (<= (- j) 0) (<= (- k) 0) (<= (- l) 0) (<= 
               (- n) 0) (= (+ l (- k) (- j) (- i)) 0) (<= (+ (- n) l 1) 0)
               (or (and (or (<= l 0)
                              (and (<= (- rem) 0)
                                     (or (<= (+ rem 1) 0)
                                           (<= (+ (- rem) 1) 0))
                                     (or (<= (+ rem -2) 0) (<= (+ rem 2) 0))
                                     (is_int (/ (+ l (- rem)) 3))))
                          (or (and (or (<= l 0)
                                         (and (<= (- rem0) 0)
                                                (or (<= (+ rem0 1) 0)
                                                      (<= (+ (- rem0) 1) 0))
                                                (or (<= (+ rem0 -1) 0)
                                                      (<= (+ rem0 1) 0))
                                                (is_int (/ (+ l (- rem0)) 2))))
                                     (= (+ (- phi_k) k 1) 0)
                                     (= (+ (- phi_j) j) 0))
                                (and (is_int (/ l 2)) (<= (- l) 0)
                                       (= (+ (- phi_k) k) 0)
                                       (= (+ (- phi_j) j 1) 0)))
                          (= (+ (- phi_i) i) 0) (= (+ (- phi_k0) phi_k) 0)
                          (= (+ (- phi_j0) phi_j) 0))
                     (and (is_int (/ l 3)) (<= (- l) 0)
                            (= (+ (- phi_i) i 1) 0) (= (+ (- phi_k0) k) 0)
                            (= (+ (- phi_j0) j) 0))) (= (+ |l'| (- l) -1) 0)
               (= (+ |j'| (- phi_j0)) 0) (= (+ |k'| (- phi_k0)) 0)
               (= (+ |i'| (- phi_i)) 0)
               (= term_to_project_onto2 (+ |i'| (- i)))
               (= term_to_project_onto1 (+ |k'| (- k)))
               (= term_to_project_onto0 (+ |j'| (- j)))
               (= term_to_project_onto (+ |l'| (- l)))))
(check-sat)
