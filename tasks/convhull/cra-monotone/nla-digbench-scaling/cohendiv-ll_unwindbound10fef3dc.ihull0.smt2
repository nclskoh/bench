(declare-const y Int)
(declare-const |tmp'| Int)
(declare-const |b'| Int)
(declare-const uninterp0 Int)
(declare-const counter Int)
(declare-const b Int)
(declare-const term_to_project_onto2 Real)
(declare-const q Int)
(declare-const a Int)
(declare-const uninterp Int)
(declare-const r Int)
(declare-const term_to_project_onto0 Real)
(declare-const term_to_project_onto1 Real)
(declare-const |a'| Int)
(declare-const |counter'| Int)
(declare-const tmp Int)
(declare-const x Int)
(declare-const term_to_project_onto Real)
(assert (and (<= (- q) 0) (<= (+ (- r) 1) 0) (<= (+ (- a) 1) 0)
               (<= (+ (- b) 1) 0) (<= (+ (- counter) 1) 0) (<= (+ (- y) 1) 0)
               (<= (+ counter -9) 0) (= (+ b (- uninterp)) 0)
               (= (+ x (- r) (- uninterp0)) 0) (<= (- r) 0)
               (<= (+ (* 2 b) (- r)) 0) (<= (+ (* 2 uninterp) (- r)) 0)
               (= (+ |tmp'| (- counter)) 0) (= (+ |b'| (* -2 b)) 0)
               (= (+ |a'| (* -2 a)) 0) (= (+ |counter'| (- counter) -1) 0)
               (<= 0 uninterp0) (<= q uninterp0) (<= 1 uninterp)
               (<= a uninterp) (<= y uninterp)
               (= term_to_project_onto2 (+ |counter'| (- counter)))
               (= term_to_project_onto1 (+ |a'| (- a)))
               (= term_to_project_onto0 (+ |b'| (- b)))
               (= term_to_project_onto (+ |tmp'| (- tmp)))))
(check-sat)
