(declare-const l Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const i Int)
(declare-const j Int)
(declare-const rem Int)
(declare-const phi_j Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const |i'| Int)
(declare-const |l'| Int)
(declare-const |j'| Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const phi_i Int)
(declare-const n Int)
(assert (and (<= (- i) 0) (<= (- j) 0) (<= (- l) 0) (<= (- n) 0)
               (= (+ l (- j) (- i)) 0) (<= (+ (- n) l 1) 0)
               (or (and (or (<= l 0)
                              (and (<= (- rem) 0)
                                     (or (<= (+ rem 1) 0)
                                           (<= (+ (- rem) 1) 0))
                                     (or (<= (+ rem -1) 0) (<= (+ rem 1) 0))
                                     (is_int (/ (+ l (- rem)) 2))))
                          (= (+ (- phi_i) i) 0) (= (+ (- phi_j) j 1) 0))
                     (and (is_int (/ l 2)) (<= (- l) 0)
                            (= (+ (- phi_i) i 1) 0) (= (+ (- phi_j) j) 0)))
               (= (+ |l'| (- l) -1) 0) (= (+ |j'| (- phi_j)) 0)
               (= (+ |i'| (- phi_i)) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |i'| (- i)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |j'| (- j)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |l'| (- l)))) 0)))
(check-sat)