(declare-const a Int)
(declare-const q Int)
(declare-const r Int)
(declare-const counter Int)
(declare-const term_to_project_onto2_integralized Int)
(declare-const uninterp Int)
(declare-const |tmp'| Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const x Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const uninterp0 Int)
(declare-const |a'| Int)
(declare-const |counter'| Int)
(declare-const |b'| Int)
(declare-const y Int)
(declare-const tmp Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const b Int)
(assert (and (<= (- q) 0) (<= (+ (- r) 1) 0) (<= (+ (- a) 1) 0)
               (<= (+ (- b) 1) 0) (<= (+ (- counter) 1) 0) (<= (+ (- y) 1) 0)
               (<= (+ counter -99) 0) (= (+ b (- uninterp)) 0)
               (= (+ x (- r) (- uninterp0)) 0) (<= (- r) 0)
               (<= (+ (* 2 b) (- r)) 0) (<= (+ (* 2 uninterp) (- r)) 0)
               (= (+ |tmp'| (- counter)) 0) (= (+ |b'| (* -2 b)) 0)
               (= (+ |a'| (* -2 a)) 0) (= (+ |counter'| (- counter) -1) 0)
               (<= (- uninterp0) 0) (<= (+ q (- uninterp0)) 0)
               (<= (+ 1 (- uninterp)) 0) (<= (+ a (- uninterp)) 0)
               (<= (+ y (- uninterp)) 0)
               (= (+ term_to_project_onto2_integralized
                       (- (+ |counter'| (- counter)))) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |a'| (- a)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |b'| (- b)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |tmp'| (- tmp)))) 0)))
(check-sat)