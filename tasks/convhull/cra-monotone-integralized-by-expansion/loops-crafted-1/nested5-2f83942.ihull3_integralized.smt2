(declare-const y Int)
(declare-const v Int)
(declare-const z Int)
(declare-const K Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const |z'0| Int)
(declare-const term_to_project_onto2_integralized Int)
(declare-const |z'| Int)
(declare-const |y'0| Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const |v'| Int)
(declare-const |x'| Int)
(declare-const |y'| Int)
(declare-const |v'0| Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const x Int)
(assert (and (<= (- v) 0) (<= (- z) 0) (<= (- y) 0) (<= (- x) 0)
               (<= (+ x -9) 0) (<= K 0) (= K 0) (= (+ (- |v'0|) v) 0)
               (= (+ (- |z'0|) z) 0) (= (- |y'0|) 0) (<= (- K) 0)
               (<= (- |v'0|) 0) (<= (- |z'0|) 0) (<= (- |y'0|) 0)
               (<= (+ (- |y'0|) 10) 0) (= (+ |v'| (- |v'0|)) 0)
               (= (+ |z'| (- |z'0|)) 0) (= (+ |y'| (- |y'0|)) 0)
               (= (+ |x'| (- x) -1) 0)
               (= (+ term_to_project_onto2_integralized (- (+ |x'| (- x)))) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |y'| (- y)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |z'| (- z)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |v'| (- v)))) 0)))
(check-sat)