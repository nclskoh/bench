(declare-const k Int)
(declare-const term_to_project_onto0 Real)
(declare-const tr0 Int)
(declare-const term_to_project_onto1 Real)
(declare-const phi_array Int)
(declare-const |k'| Int)
(declare-const |array'| Int)
(declare-const array Int)
(declare-const phi_array.100 Int)
(declare-const tr Int)
(declare-const array.100 Int)
(declare-const term_to_project_onto Real)
(declare-const phi_array0 Int)
(declare-const |array.100'| Int)
(assert (and (<= (- k) 0) (<= (+ k -1048575) 0)
               (or (and (or (= (+ (- phi_array) array) 0)
                              (= (+ tr0 tr (- phi_array)) 0))
                          (= (+ (- phi_array0) phi_array) 0)
                          (= (+ (- phi_array.100) array.100) 0))
                     (and (= (+ (- phi_array0) array) 0)
                            (= (+ (- phi_array.100) tr0 tr) 0)))
               (= (+ |k'| (- k) -1) 0)
               (= (+ |array.100'| (- phi_array.100)) 0)
               (= (+ |array'| (- phi_array0)) 0)
               (= term_to_project_onto1 (+ |array'| (- array)))
               (= term_to_project_onto0 (+ |array.100'| (- array.100)))
               (= term_to_project_onto (+ |k'| (- k)))))
(check-sat)
