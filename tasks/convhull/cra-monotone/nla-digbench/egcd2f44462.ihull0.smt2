(declare-const x Int)
(declare-const |k'| Int)
(declare-const term_to_project_onto Real)
(declare-const term_to_project_onto0 Real)
(declare-const |c'| Int)
(declare-const uninterp4 Int)
(declare-const b Int)
(declare-const c Int)
(declare-const uninterp7 Int)
(declare-const uninterp2 Int)
(declare-const r Int)
(declare-const uninterp3 Int)
(declare-const k Int)
(declare-const p Int)
(declare-const uninterp0 Int)
(declare-const uninterp1 Int)
(declare-const q Int)
(declare-const uninterp6 Int)
(declare-const uninterp8 Int)
(declare-const uninterp5 Int)
(declare-const s Int)
(declare-const a Int)
(declare-const y Int)
(declare-const uninterp Int)
(assert (and (<= (- k) 0) (<= (- c) 0) (<= (+ (- a) 1) 0) (<= (+ (- b) 1) 0)
               (<= (+ (- y) 1) 0) (<= (+ (- x) 1) 0)
               (= (+ a (- c) (- uninterp)) 0)
               (= (+ (- uninterp0) (- uninterp1) a) 0)
               (= (+ (- uninterp2) (- uninterp3) b) 0)
               (= (+ (- uninterp2) uninterp5 (- uninterp3) uninterp7
                       (- uninterp8) b) 0) (<= (+ b (- c)) 0)
               (= (+ |k'| (- k) -1) 0) (= (+ |c'| b (- c)) 0)
               (<= 1 uninterp8) (<= b uninterp8) (<= y uninterp8)
               (<= q uninterp7) (<= 1 uninterp6) (<= y uninterp6)
               (<= x uninterp6) (<= s uninterp5) (<= 1 uninterp4)
               (<= y uninterp4) (<= y uninterp4) (<= s uninterp3)
               (<= q uninterp2) (<= r uninterp1) (<= p uninterp0)
               (<= 0 uninterp) (<= k uninterp)
               (= 0 (+ (- uninterp5) (- uninterp7) uninterp8))
               (= term_to_project_onto0 (+ |c'| (- c)))
               (= term_to_project_onto (+ |k'| (- k)))))
(check-sat)
