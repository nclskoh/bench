(declare-const |tmp'| Int)
(declare-const term_to_project_onto0 Real)
(declare-const term_to_project_onto1 Real)
(declare-const term_to_project_onto Real)
(declare-const bufsize Int)
(declare-const len Int)
(declare-const limit Int)
(declare-const |i'| Int)
(declare-const |j'0| Int)
(declare-const tmp Int)
(declare-const |tmp'0| Int)
(declare-const |i'0| Int)
(declare-const |j'| Int)
(declare-const K Int)
(declare-const j Int)
(declare-const i Int)
(assert (and (<= (- i) 0) (<= (- bufsize) 0) (= (+ limit (- bufsize) 4) 0)
               (<= (+ (- len) i 1) 0) (= (+ (* -2 |i'0|) |j'0| K (* 2 i)) 0)
               (<= (+ |j'0| (* -3 K)) 0) (<= (+ (- |j'0|) K) 0)
               (or (and (= K 0) (= (+ (- |tmp'0|) tmp) 0) (= (- |j'0|) 0)
                          (= (+ (- |i'0|) i) 0))
                     (and (<= (+ (- K) 1) 0) (= (+ limit (- bufsize) 4) 0)
                            (<= (+ (- len) i 1) 0) (<= (- i) 0)
                            (<= (+ (- bufsize) 5) 0)
                            (= (+ limit (- bufsize) 4) 0)
                            (<= (+ (- |j'0|) 1) 0) (<= (+ (- |i'0|) 1) 0)
                            (<= (+ |i'0| (- len)) 0)
                            (<= (+ |j'0| (- bufsize) 2) 0)
                            (<= (+ (- bufsize) 5) 0)
                            (<= (+ (* -2 |i'0|) |j'0| (- bufsize) 6) 0)))
               (<= (- K) 0) (<= (- |j'0|) 0) (<= (+ (- len) 1) 0)
               (<= (- |i'0|) 0) (<= (- bufsize) 0)
               (= (+ limit (- bufsize) 4) 0)
               (or (<= (+ (- |i'0|) len) 0)
                     (and (<= (+ |i'0| (- len) 1) 0)
                            (<= (+ (- |j'0|) limit) 0)))
               (= (+ |tmp'| (- |tmp'0|)) 0) (= (+ |j'| (- |j'0|)) 0)
               (= (+ |i'| (- |i'0|)) 0)
               (= term_to_project_onto1 (+ |i'| (- i)))
               (= term_to_project_onto0 (+ |j'| (- j)))
               (= term_to_project_onto (+ |tmp'| (- tmp)))))
(check-sat)
