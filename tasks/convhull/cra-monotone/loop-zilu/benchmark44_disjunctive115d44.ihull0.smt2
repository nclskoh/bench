(declare-const y Int)
(declare-const phi_y0 Int)
(declare-const phi_y Int)
(declare-const |y'| Int)
(declare-const term_to_project_onto Real)
(declare-const phi_x0 Int)
(declare-const term_to_project_onto0 Real)
(declare-const phi_x2 Int)
(declare-const |x'| Int)
(declare-const x Int)
(declare-const phi_x1 Int)
(declare-const phi_x Int)
(assert (and (<= (+ (- y) x 1) 0)
               (or (and (<= (+ x 1) 0)
                          (or (and (<= (- y) 0) (= (+ (- phi_x) x) 0)
                                     (= (+ (- phi_y) y) 0))
                                (and (<= (+ y 1) 0) (= (+ (- phi_x) x 7) 0)
                                       (= (+ (- phi_y) y -10) 0)))
                          (= (+ (- phi_x0) phi_x) 0)
                          (= (+ (- phi_y0) phi_y) 0))
                     (and (<= (- x) 0) (= (+ (- phi_x0) x) 0)
                            (= (+ (- phi_y0) y) 0)))
               (or (and (<= (+ phi_x0 1) 0)
                          (or (and (<= (+ phi_y0 1) 0)
                                     (= (+ (- phi_x1) phi_x0 10) 0))
                                (and (<= (- phi_y0) 0)
                                       (= (+ (- phi_x1) phi_x0 7) 0)))
                          (= (+ (- phi_x2) phi_x1) 0))
                     (and (<= (- phi_x0) 0) (= (+ (- phi_x2) phi_x0 10) 0)))
               (= (+ |y'| (- phi_y0) -3) 0) (= (+ |x'| (- phi_x2)) 0)
               (= term_to_project_onto0 (+ |x'| (- x)))
               (= term_to_project_onto (+ |y'| (- y)))))
(check-sat)
