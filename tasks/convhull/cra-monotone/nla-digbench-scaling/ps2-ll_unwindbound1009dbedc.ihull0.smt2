(declare-const tmp Int)
(declare-const term_to_project_onto0 Real)
(declare-const uninterp Int)
(declare-const counter Int)
(declare-const x Int)
(declare-const |c'| Int)
(declare-const term_to_project_onto3 Real)
(declare-const c Int)
(declare-const |tmp'| Int)
(declare-const term_to_project_onto Real)
(declare-const |y'| Int)
(declare-const |x'| Int)
(declare-const |counter'| Int)
(declare-const term_to_project_onto1 Real)
(declare-const term_to_project_onto2 Real)
(declare-const k Int)
(declare-const y Int)
(assert (and (<= (- c) 0) (<= (- x) 0) (<= (- y) 0) (<= (- counter) 0)
               (= (+ counter (- y)) 0) (= (+ y (- c)) 0)
               (<= (+ counter -99) 0) (= (+ uninterp y (* -2 x)) 0)
               (<= (+ (- k) c 1) 0) (= (+ |tmp'| (- counter)) 0)
               (= (+ |c'| (- c) -1) 0) (= (+ |x'| (- y) (- x) -1) 0)
               (= (+ |y'| (- y) -1) 0) (= (+ |counter'| (- counter) -1) 0)
               (<= 0 uninterp) (<= uninterp 9801) (<= uninterp (* 99 y))
               (<= uninterp (* 99 y))
               (= term_to_project_onto3 (+ |counter'| (- counter)))
               (= term_to_project_onto2 (+ |y'| (- y)))
               (= term_to_project_onto1 (+ |x'| (- x)))
               (= term_to_project_onto0 (+ |c'| (- c)))
               (= term_to_project_onto (+ |tmp'| (- tmp)))))
(check-sat)
