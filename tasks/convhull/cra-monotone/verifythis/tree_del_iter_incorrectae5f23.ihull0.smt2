(declare-const term_to_project_onto4 Real)
(declare-const term_to_project_onto Real)
(declare-const term_to_project_onto1 Real)
(declare-const |pp@pos'| Int)
(declare-const tt@pos Int)
(declare-const |p'| Int)
(declare-const |tt@width'| Int)
(declare-const |tt@pos'| Int)
(declare-const pp@width Int)
(declare-const p@width Int)
(declare-const term_to_project_onto3 Real)
(declare-const tr Int)
(declare-const term_to_project_onto2 Real)
(declare-const term_to_project_onto5 Real)
(declare-const |p@pos'| Int)
(declare-const type_err Int)
(declare-const term_to_project_onto0 Real)
(declare-const term_to_project_onto6 Real)
(declare-const tt@width Int)
(declare-const pp Int)
(declare-const |pp'| Int)
(declare-const |tt'| Int)
(declare-const |p@width'| Int)
(declare-const term_to_project_onto7 Real)
(declare-const tt Int)
(declare-const type_err0 Int)
(declare-const |pp@width'| Int)
(declare-const p Int)
(declare-const p@pos Int)
(declare-const pp@pos Int)
(assert (and (or (< tt 0) (< (- tt) 0)) (= (+ (- type_err0) |tt@width'|) 0)
               (= (+ (- p@width) |pp@width'|) 0)
               (= (+ (- tt@width) |p@width'|) 0)
               (= (+ (- type_err) |tt@pos'|) 0) (= (+ (- p@pos) |pp@pos'|) 0)
               (= (+ (- tt@pos) |p@pos'|) 0) (= (+ (- tr) |tt'|) 0)
               (= (+ (- p) |pp'|) 0) (= (+ |p'| (- tt)) 0)
               (= term_to_project_onto7 (+ |p'| (- p)))
               (= term_to_project_onto6 (+ |pp'| (- pp)))
               (= term_to_project_onto5 (+ |tt'| (- tt)))
               (= term_to_project_onto4 (+ |p@pos'| (- p@pos)))
               (= term_to_project_onto3 (+ |pp@pos'| (- pp@pos)))
               (= term_to_project_onto2 (+ |tt@pos'| (- tt@pos)))
               (= term_to_project_onto1 (+ |p@width'| (- p@width)))
               (= term_to_project_onto0 (+ |pp@width'| (- pp@width)))
               (= term_to_project_onto (+ |tt@width'| (- tt@width)))))
(check-sat)
