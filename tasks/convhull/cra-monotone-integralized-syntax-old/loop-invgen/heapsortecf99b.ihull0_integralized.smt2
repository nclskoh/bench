(declare-const r Int)
(declare-const i Int)
(declare-const j Int)
(declare-const phi_j Int)
(declare-const phi_j0 Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const |j'| Int)
(declare-const havoc0 Int)
(declare-const |tmp___0'| Int)
(declare-const tmp___0 Int)
(declare-const |i'| Int)
(declare-const havoc Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const n Int)
(assert (and (<= (- i) 0) (<= (- j) 0) (<= (+ (- r) 1) 0) (<= (+ (- n) 1) 0)
               (= (+ j (* -2 i)) 0) (<= (+ (- r) j) 0)
               (or (and (<= (+ r (- j)) 0) (= (+ (- phi_j) j) 0))
                     (and (<= (+ (- r) j 1) 0) (<= (+ (- j) 1) 0)
                            (<= (+ (- n) j) 0) (<= (- j) 0)
                            (<= (+ (- n) j 1) 0)
                            (or (and (= havoc 0) (= (+ (- phi_j0) j) 0))
                                  (and (or (<= (+ havoc 1) 0)
                                             (<= (+ (- havoc) 1) 0))
                                         (= (+ (- phi_j0) j 1) 0)))
                            (= (+ phi_j0 (- phi_j)) 0)))
               (<= (+ (- phi_j) 1) 0) (<= (+ phi_j (- n)) 0) (= havoc0 0)
               (<= (+ (- i) 1) 0) (<= (+ (- n) i) 0) (<= (+ (- phi_j) 1) 0)
               (<= (+ phi_j (- n)) 0) (= (+ |tmp___0'| (- havoc0)) 0)
               (= (+ |j'| (* -2 phi_j)) 0) (= (+ |i'| (- phi_j)) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |i'| (- i)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |j'| (- j)))) 0)
               (= (+ term_to_project_onto_integralized
                       (- (+ |tmp___0'| (- tmp___0)))) 0)))