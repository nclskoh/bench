(declare-const q Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const |p'| Int)
(declare-const term_to_project_onto3_integralized Int)
(declare-const p Int)
(declare-const term_to_project_onto2_integralized Int)
(declare-const d Int)
(declare-const B Int)
(declare-const A Int)
(declare-const term_to_project_onto4_integralized Int)
(declare-const |counter'| Int)
(declare-const |r'| Int)
(declare-const phi_r Int)
(declare-const tmp___0 Int)
(declare-const uninterp Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const uninterp0 Int)
(declare-const |tmp___0'| Int)
(declare-const |q'| Int)
(declare-const |d'| Int)
(declare-const phi_q Int)
(declare-const r Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const counter Int)
(assert (and (<= (+ (- p) 1) 0) (<= (+ (- d) 1) 0) (<= (- q) 0)
               (<= (+ (- counter) 1) 0) (<= (+ (- B) 1) 0) (= (+ (- B) 1) 0)
               (= (+ (- r) A (- q)) 0) (= (+ d (- p)) 0)
               (<= (+ counter -19) 0) (= (+ (- r) A (- uninterp)) 0)
               (= (+ d (- uninterp0)) 0) (or (<= p 0) (<= (+ (- p) 2) 0))
               (or (and (<= (+ 2
                                 (ite (and (<= (- d) 0) (<= (- d) 0))
                                      (mod d 2) (+ (mod d 2) -2)) (* 
                                 2 r) (- d)) 0) (= (+ (- phi_r) r) 0)
                          (= (+ (- phi_q) q) 0))
                     (and (<= (+ (- (ite (and (<= (- d) 0) (<= (- d) 0))
                                         (mod d 2) (+ (mod d 2) -2)))
                                   (- (* 2 r)) d) 0)
                            (= (+ (- (* 2 phi_r))
                                    (ite (and (<= (- d) 0) (<= (- d) 0))
                                         (mod d 2) (+ (mod d 2) -2)) (* 
                                    2 r) (- d)) 0)
                            (= (+ (- (ite (and (<= (- p) 0) (<= (- p) 0))
                                          (mod p 2) (+ (mod p 2) -2)))
                                    (- (* 2 phi_q)) (* 2 q) p) 0)))
               (= (+ |tmp___0'| (- counter)) 0) (= (+ |q'| (- phi_q)) 0)
               (= (+ (ite (and (<= (- p) 0) (<= (- p) 0)) (mod p 2)
                          (+ (mod p 2) -2)) (* 2 |p'|) (- p)) 0)
               (= (+ (* 2 |d'|)
                       (ite (and (<= (- d) 0) (<= (- d) 0)) (mod d 2)
                            (+ (mod d 2) -2)) (- d)) 0)
               (= (+ |r'| (- phi_r)) 0) (= (+ |counter'| (- counter) -1) 0)
               (<= (+ 2 (- uninterp0)) 0) (<= (+ p (- uninterp0)) 0)
               (<= (+ (* 2 B) (- uninterp0)) 0) (<= (+ uninterp0 (- p)) 0)
               (<= (- uninterp) 0) (<= (+ q (- uninterp)) 0)
               (<= (+ uninterp (- q)) 0)
               (= (+ term_to_project_onto4_integralized
                       (- (+ |counter'| (- counter)))) 0)
               (= (+ term_to_project_onto3_integralized (- (+ |r'| (- r)))) 0)
               (= (+ term_to_project_onto2_integralized (- (+ |d'| (- d)))) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |p'| (- p)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |q'| (- q)))) 0)
               (= (+ term_to_project_onto_integralized
                       (- (+ |tmp___0'| (- tmp___0)))) 0)))