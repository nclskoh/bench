(declare-const N_COL Int)
(declare-const j Int)
(declare-const N_LIN Int)
(declare-const K Int)
(declare-const |j'| Int)
(declare-const k Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const |k'| Int)
(declare-const |k'0| Int)
(assert (and (<= (- j) 0) (<= (- N_LIN) 0) (<= (- N_COL) 0)
               (<= (+ (- N_COL) j 1) 0) (= (+ (- |k'0|) K) 0)
               (or (and (= K 0) (= (- |k'0|) 0))
                     (and (<= (+ (- K) 1) 0) (<= (+ (- N_LIN) 1) 0)
                            (<= (+ (- |k'0|) 1) 0) (<= (+ |k'0| (- N_LIN)) 0)))
               (<= (- K) 0) (<= (- |k'0|) 0) (<= (- N_LIN) 0)
               (<= (+ (- |k'0|) N_LIN) 0) (= (+ |k'| (- |k'0|)) 0)
               (= (+ |j'| (- j) -1) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |j'| (- j)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |k'| (- k)))) 0)))
(check-sat)