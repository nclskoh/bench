(declare-const l Int)
(declare-const |l'| Int)
(declare-const |i'| Int)
(declare-const phi_l Int)
(declare-const k Int)
(declare-const K Int)
(declare-const term_to_project_onto1 Real)
(declare-const |i'0| Int)
(declare-const |k'| Int)
(declare-const havoc Int)
(declare-const term_to_project_onto Real)
(declare-const term_to_project_onto0 Real)
(declare-const i Int)
(declare-const n Int)
(assert (and (<= (+ (- k) 1) 0) (<= (+ (- l) 1) 0) (<= (+ (- n) k 1) 0)
               (= (+ (- |i'0|) K l) 0)
               (or (and (= K 0) (= (+ (- |i'0|) l) 0))
                     (and (<= (+ (- K) 1) 0) (<= (+ (- l) 1) 0)
                            (<= (+ (- n) l 1) 0) (<= (+ (- |i'0|) 2) 0)
                            (<= (+ |i'0| (- n)) 0))) (<= (- K) 0)
               (<= (+ (- |i'0|) 1) 0) (<= (+ (- n) 1) 0)
               (<= (+ (- |i'0|) n) 0)
               (or (and (= havoc 0) (= (+ (- phi_l) l) 0))
                     (and (or (<= (+ havoc 1) 0) (<= (+ (- havoc) 1) 0))
                            (= (+ (- phi_l) l 1) 0)))
               (= (+ |l'| (- phi_l)) 0) (= (+ |k'| (- k) -1) 0)
               (= (+ |i'| (- |i'0|)) 0)
               (= term_to_project_onto1 (+ |i'| (- i)))
               (= term_to_project_onto0 (+ |k'| (- k)))
               (= term_to_project_onto (+ |l'| (- l)))))
(check-sat)
