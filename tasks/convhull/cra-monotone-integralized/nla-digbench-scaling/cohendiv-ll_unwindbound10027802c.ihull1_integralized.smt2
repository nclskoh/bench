(declare-const b Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const |tmp'0| Int)
(declare-const q Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const a Int)
(declare-const y Int)
(declare-const |b'| Int)
(declare-const r Int)
(declare-const tmp___0 Int)
(declare-const |counter'| Int)
(declare-const |tmp___0'| Int)
(declare-const uninterp1 Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const |counter'0| Int)
(declare-const |r'| Int)
(declare-const x Int)
(declare-const term_to_project_onto2_integralized Int)
(declare-const term_to_project_onto4_integralized Int)
(declare-const |a'| Int)
(declare-const uninterp0 Int)
(declare-const |a'0| Int)
(declare-const |b'0| Int)
(declare-const term_to_project_onto5_integralized Int)
(declare-const tmp Int)
(declare-const K Int)
(declare-const term_to_project_onto3_integralized Int)
(declare-const uninterp Int)
(declare-const |tmp'| Int)
(declare-const |q'| Int)
(declare-const counter Int)
(assert (and (<= (- q) 0) (<= (- a) 0) (<= (- b) 0) (<= (- counter) 0)
               (<= (+ (- y) 1) 0) (<= (+ counter -99) 0)
               (= (+ b (- uninterp)) 0) (= (+ (- r) x (- uninterp0)) 0)
               (<= (+ (- r) y) 0) (= (+ (- |counter'0|) K counter 1) 0)
               (<= (+ (- |a'0|) K 1) 0) (<= (+ (- |b'0|) |a'0| y -1) 0)
               (or (and (= K 0) (= (+ (- |tmp'0|) tmp) 0)
                          (= (+ (- |b'0|) y) 0) (= (+ (- |a'0|) 1) 0)
                          (= (+ (- |counter'0|) counter 1) 0))
                     (and (<= (+ (- K) 1) 0) (<= (+ counter -98) 0)
                            (<= (+ (- r) (* 2 y)) 0) (<= (- q) 0)
                            (<= (+ (- y) 1) 0) (<= (- counter) 0)
                            (<= (+ r (- x) q) 0) (<= (+ (- y) 1) 0)
                            (= (+ |tmp'0| (- |counter'0|) 1) 0)
                            (<= (+ (- |b'0|) (* 2 y)) 0)
                            (<= (+ |counter'0| -100) 0)
                            (<= (+ (- |b'0|) |a'0|) 0) (<= (+ (- |a'0|) 2) 0)
                            (<= (+ (- |counter'0|) 2) 0) (<= (- q) 0)
                            (<= (+ |b'0| (- r)) 0) (<= (+ r (- x) q) 0)
                            (<= (+ (- y) 1) 0))) (<= (- K) 0) (<= (- q) 0)
               (<= (+ (- r) 1) 0) (<= (+ (- |a'0|) 1) 0)
               (<= (+ (- |b'0|) 1) 0) (<= (+ (- |counter'0|) 1) 0)
               (<= (+ (- y) 1) 0)
               (or (and (<= (+ |counter'0| -99) 0)
                          (= (+ |b'0| (- uninterp1)) 0)
                          (= (+ (- r) x (- uninterp0)) 0) (<= (- r) 0)
                          (<= (+ (* -2 |b'0|) r 1) 0))
                     (<= (+ (- |counter'0|) 100) 0))
               (= (+ |tmp___0'| (- counter)) 0)
               (= (+ |tmp'| (- |counter'0|)) 0) (= (+ |b'| (- |b'0|)) 0)
               (= (+ |a'| (- |a'0|)) 0) (= (+ |r'| |b'0| (- r)) 0)
               (= (+ |q'| (- |a'0|) (- q)) 0)
               (= (+ |counter'| (- |counter'0|) -1) 0)
               (<= (+ 1 (- uninterp1)) 0) (<= (+ y (- uninterp1)) 0)
               (<= (+ |a'0| (- uninterp1)) 0) (<= (- uninterp0) 0)
               (<= (+ q (- uninterp0)) 0) (<= (- uninterp) 0)
               (<= (+ a (- uninterp)) 0)
               (= (+ term_to_project_onto5_integralized
                       (- (+ |counter'| (- counter)))) 0)
               (= (+ term_to_project_onto4_integralized (- (+ |q'| (- q)))) 0)
               (= (+ term_to_project_onto3_integralized (- (+ |r'| (- r)))) 0)
               (= (+ term_to_project_onto2_integralized (- (+ |a'| (- a)))) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |b'| (- b)))) 0)
               (= (+ term_to_project_onto0_integralized
                       (- (+ |tmp'| (- tmp)))) 0)
               (= (+ term_to_project_onto_integralized
                       (- (+ |tmp___0'| (- tmp___0)))) 0)))