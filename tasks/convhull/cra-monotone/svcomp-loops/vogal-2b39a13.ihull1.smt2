(declare-const i Int)
(declare-const |j'0| Int)
(declare-const |j'| Int)
(declare-const j Int)
(declare-const cont_aux Int)
(declare-const K Int)
(declare-const |i'| Int)
(declare-const term_to_project_onto0 Real)
(declare-const term_to_project_onto Real)
(declare-const |cont_aux'0| Int)
(declare-const term_to_project_onto1 Real)
(declare-const |cont_aux'| Int)
(declare-const tr0 Int)
(declare-const tr Int)
(assert (and (<= (- cont_aux) 0) (<= (- i) 0)
               (or (<= (+ tr 1) 0) (<= (+ (- tr0) 1) 0))
               (= (+ (- |j'0|) K) 0)
               (<= (+ |cont_aux'0| (- K) (- cont_aux)) 0)
               (<= (+ (- |cont_aux'0|) cont_aux) 0)
               (or (and (= K 0) (= (+ (- |cont_aux'0|) cont_aux) 0)
                          (= (- |j'0|) 0))
                     (and (<= (+ (- K) 1) 0) (<= (- cont_aux) 0)
                            (<= (+ |j'0| -10) 0) (<= (- |cont_aux'0|) 0)
                            (<= (+ (- |j'0|) 1) 0))) (<= (- K) 0)
               (<= (- |cont_aux'0|) 0) (<= (- |j'0|) 0)
               (<= (+ (- |j'0|) 10) 0) (= (+ |cont_aux'| (- |cont_aux'0|)) 0)
               (= (+ |j'| (- |j'0|)) 0) (= (+ |i'| (- i) -1) 0)
               (= term_to_project_onto1 (+ |i'| (- i)))
               (= term_to_project_onto0 (+ |j'| (- j)))
               (= term_to_project_onto (+ |cont_aux'| (- cont_aux)))))
(check-sat)
