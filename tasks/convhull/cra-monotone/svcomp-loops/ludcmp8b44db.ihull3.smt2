(declare-const i Int)
(declare-const term_to_project_onto Real)
(declare-const w Real)
(declare-const |a.Top@width'| Int)
(declare-const a.Top Int)
(declare-const |j'| Int)
(declare-const n Int)
(declare-const |w'| Real)
(declare-const term_to_project_onto2 Real)
(declare-const phi_k Int)
(declare-const tr Int)
(declare-const |a.Top'| Int)
(declare-const store Int)
(declare-const a.Top@pos Int)
(declare-const term_to_project_onto4 Real)
(declare-const K Int)
(declare-const a.Top@width Int)
(declare-const term_to_project_onto3 Real)
(declare-const |a.Top@pos'| Int)
(declare-const phi_w Real)
(declare-const k Int)
(declare-const |k'0| Int)
(declare-const store1 Int)
(declare-const term_to_project_onto0 Real)
(declare-const j Int)
(declare-const |w'0| Real)
(declare-const |k'| Int)
(declare-const store0 Int)
(declare-const term_to_project_onto1 Real)
(assert (and (<= (+ (- j) 1) 0) (<= (- i) 0) (<= (+ (- n) 1) 0)
               (<= (+ (- n) j) 0)
               (or (and (<= (- i) 0) (<= i 0) (= (+ (- phi_k) k) 0)
                          (= (+ (- phi_w) tr) 0))
                     (and (or (<= (+ i 1) 0) (<= (+ (- i) 1) 0))
                            (= (+ (- |k'0|) K) 0)
                            (or (and (= K 0) (= (+ (- |w'0|) tr) 0)
                                       (= (- |k'0|) 0))
                                  (and (<= (+ (- K) 1) 0) (<= (+ (- i) 1) 0)
                                         (<= (+ (- |k'0|) 1) 0)
                                         (<= (+ |k'0| (- i)) 0)))
                            (<= (- K) 0) (<= (- |k'0|) 0) (<= (+ (- i) 1) 0)
                            (<= (+ (- |k'0|) i) 0) (= (+ |k'0| (- phi_k)) 0)
                            (= (+ |w'0| (- phi_w)) 0)))
               (= (+ (- store1) |a.Top@width'|) 0)
               (= (+ (- store0) |a.Top@pos'|) 0) (= (+ |w'| (- phi_w)) 0)
               (= (+ |k'| (- phi_k)) 0) (= (+ |j'| (- j) -1) 0)
               (= (+ (- store) |a.Top'|) 0)
               (= term_to_project_onto4 (+ |a.Top'| (- a.Top)))
               (= term_to_project_onto3 (+ |j'| (- j)))
               (= term_to_project_onto2 (+ |k'| (- k)))
               (= term_to_project_onto1 (+ |w'| (- w)))
               (= term_to_project_onto0 (+ |a.Top@pos'| (- a.Top@pos)))
               (= term_to_project_onto (+ |a.Top@width'| (- a.Top@width)))))
(check-sat)
