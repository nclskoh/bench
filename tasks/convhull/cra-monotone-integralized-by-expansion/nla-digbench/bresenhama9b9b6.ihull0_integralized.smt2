(declare-const v Int)
(declare-const x Int)
(declare-const y Int)
(declare-const Y Int)
(declare-const uninterp0 Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const |y'| Int)
(declare-const phi_v Int)
(declare-const phi_y Int)
(declare-const |v'| Int)
(declare-const |x'| Int)
(declare-const uninterp Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const X Int)
(assert (and (<= (- x) 0) (<= (- y) 0)
               (= (+ (- v) (- X) (* 2 Y) (* -2 uninterp) (* 2 uninterp0)) 0)
               (<= (+ (- X) x) 0)
               (or (and (<= (- v) 0) (= (+ (- phi_v) v (* -2 X) (* 2 Y)) 0)
                          (= (+ (- phi_y) y 1) 0))
                     (and (<= (+ v 1) 0) (= (+ (- phi_v) v (* 2 Y)) 0)
                            (= (+ (- phi_y) y) 0))) (= (+ |y'| (- phi_y)) 0)
               (= (+ |x'| (- x) -1) 0) (= (+ |v'| (- phi_v)) 0)
               (<= (- uninterp) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |v'| (- v)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |x'| (- x)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |y'| (- y)))) 0)))
(check-sat)