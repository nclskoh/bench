(declare-const term_to_project_onto Real)
(declare-const uninterp0 Int)
(declare-const |x'| Int)
(declare-const uninterp1 Int)
(declare-const uninterp Int)
(declare-const a Int)
(declare-const b Int)
(declare-const v Int)
(declare-const x Int)
(declare-const y Int)
(declare-const term_to_project_onto0 Real)
(declare-const u Int)
(declare-const |v'| Int)
(assert (and (<= (+ (- x) 1) 0) (<= (+ (- u) 1) 0) (<= (+ (- y) 1) 0)
               (<= (- v) 0) (<= (+ (- b) 1) 0) (<= (+ (- a) 1) 0)
               (= (+ (- uninterp) uninterp0 uninterp1) 0)
               (<= (+ y (- x) 1) 0) (= (+ |v'| (- v) (- u)) 0)
               (= (+ |x'| y (- x)) 0) (<= 2 uninterp1) (<= x uninterp1)
               (<= (* 2 u) uninterp1) (<= 0 uninterp0) (<= v uninterp0)
               (<= 1 uninterp) (<= b uninterp) (<= a uninterp)
               (= 0 (+ (- uninterp) uninterp0 uninterp1))
               (= term_to_project_onto0 (+ |x'| (- x)))
               (= term_to_project_onto (+ |v'| (- v)))))
(check-sat)
