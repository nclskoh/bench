(declare-const p Int)
(declare-const term_to_project_onto3_integralized Int)
(declare-const tmp Int)
(declare-const uninterp3 Int)
(declare-const |p'| Int)
(declare-const b Int)
(declare-const |b'| Int)
(declare-const a Int)
(declare-const r Int)
(declare-const phi_q Int)
(declare-const counter Int)
(declare-const term_to_project_onto4_integralized Int)
(declare-const |q'| Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const |s'| Int)
(declare-const phi_b Int)
(declare-const phi_a Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const uninterp Int)
(declare-const |r'| Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const phi_s Int)
(declare-const y Int)
(declare-const |counter'| Int)
(declare-const phi_r Int)
(declare-const x Int)
(declare-const term_to_project_onto2_integralized Int)
(declare-const term_to_project_onto6_integralized Int)
(declare-const uninterp1 Int)
(declare-const uninterp2 Int)
(declare-const uninterp4 Int)
(declare-const term_to_project_onto5_integralized Int)
(declare-const uninterp0 Int)
(declare-const q Int)
(declare-const |a'| Int)
(declare-const phi_p Int)
(declare-const |tmp'| Int)
(declare-const s Int)
(assert (and (<= (+ (- b) 1) 0) (<= (+ (- a) 1) 0) (<= (+ (- p) 1) 0)
               (<= (+ (- s) 1) 0) (<= r 0) (<= q 0) (<= (- counter) 0)
               (<= (+ (- y) 1) 0) (<= (+ (- x) 1) 0) (<= (+ counter -1) 0)
               (= (+ uninterp (- uninterp0) 1) 0)
               (= (+ (- uninterp1) (- uninterp2) a) 0)
               (= (+ (- uninterp3) (- uninterp4) b) 0)
               (or (<= (+ a (- b) 1) 0) (<= (+ (- a) b 1) 0))
               (or (and (<= (+ a (- b)) 0) (= (+ (- phi_a) a) 0)
                          (= (+ (- phi_b) (- a) b) 0) (= (+ (- phi_p) p) 0)
                          (= (+ (- phi_q) q (- p)) 0) (= (+ (- phi_r) r) 0)
                          (= (+ (- phi_s) (- r) s) 0))
                     (and (<= (+ (- a) b 1) 0) (= (+ (- phi_a) a (- b)) 0)
                            (= (+ (- phi_b) b) 0) (= (+ (- phi_p) (- q) p) 0)
                            (= (+ (- phi_q) q) 0) (= (+ (- phi_r) r (- s)) 0)
                            (= (+ (- phi_s) s) 0)))
               (= (+ |tmp'| (- counter)) 0) (= (+ |s'| (- phi_s)) 0)
               (= (+ |r'| (- phi_r)) 0) (= (+ |q'| (- phi_q)) 0)
               (= (+ |p'| (- phi_p)) 0) (= (+ |b'| (- phi_b)) 0)
               (= (+ |a'| (- phi_a)) 0) (= (+ |counter'| (- counter) -1) 0)
               (<= (+ 1 (- uninterp4)) 0) (<= (+ s (- uninterp4)) 0)
               (<= (+ y (- uninterp4)) 0) (<= (+ q (- uninterp3)) 0)
               (<= uninterp3 0) (<= (+ 1 (- uninterp2)) 0)
               (<= (+ p (- uninterp2)) 0) (<= (+ x (- uninterp2)) 0)
               (<= (+ r (- uninterp1)) 0) (<= uninterp1 0)
               (<= (+ 1 (- uninterp0)) 0) (<= (+ p (- uninterp0)) 0)
               (<= (+ s (- uninterp0)) 0) (<= (- uninterp) 0)
               (= (- (+ -1 (- uninterp) uninterp0)) 0)
               (= (+ term_to_project_onto6_integralized
                       (- (+ |counter'| (- counter)))) 0)
               (= (+ term_to_project_onto5_integralized (- (+ |a'| (- a)))) 0)
               (= (+ term_to_project_onto4_integralized (- (+ |b'| (- b)))) 0)
               (= (+ term_to_project_onto3_integralized (- (+ |p'| (- p)))) 0)
               (= (+ term_to_project_onto2_integralized (- (+ |q'| (- q)))) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |r'| (- r)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |s'| (- s)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |tmp'| (- tmp)))) 0)))
(check-sat)