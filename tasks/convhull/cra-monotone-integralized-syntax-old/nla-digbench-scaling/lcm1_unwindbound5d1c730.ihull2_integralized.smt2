(declare-const y Int)
(declare-const |v'| Int)
(declare-const term_to_project_onto2_integralized Int)
(declare-const |v'0| Int)
(declare-const uninterp5 Int)
(declare-const x Int)
(declare-const |tmp___1'| Int)
(declare-const u Int)
(declare-const counter Int)
(declare-const |counter'1| Int)
(declare-const a Int)
(declare-const uninterp4 Int)
(declare-const |u'| Int)
(declare-const term_to_project_onto5_integralized Int)
(declare-const |tmp___0'0| Int)
(declare-const uninterp2 Int)
(declare-const tmp Int)
(declare-const term_to_project_onto6_integralized Int)
(declare-const term_to_project_onto3_integralized Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const uninterp1 Int)
(declare-const tmp___0 Int)
(declare-const term_to_project_onto4_integralized Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const |y'0| Int)
(declare-const uninterp Int)
(declare-const |tmp'| Int)
(declare-const |x'| Int)
(declare-const K0 Int)
(declare-const uninterp0 Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const tmp___1 Int)
(declare-const K Int)
(declare-const |x'0| Int)
(declare-const |y'| Int)
(declare-const |tmp'0| Int)
(declare-const |counter'0| Int)
(declare-const |counter'| Int)
(declare-const b Int)
(declare-const |tmp___0'| Int)
(declare-const uninterp3 Int)
(declare-const |u'0| Int)
(declare-const v Int)
(assert (and (<= (+ (- x) 1) 0) (<= (+ (- u) 1) 0) (<= (+ (- y) 1) 0)
               (<= (- v) 0) (<= (- counter) 0) (<= (+ (- b) 1) 0)
               (<= (+ (- a) 1) 0) (<= (+ counter -4) 0)
               (= (+ (- uninterp) uninterp0 uninterp1) 0)
               (or (<= (+ (- y) x 1) 0) (<= (+ y (- x) 1) 0))
               (= (+ (- |counter'0|) K counter 1) 0) (<= (+ |x'0| K (- x)) 0)
               (<= (+ (- |v'0|) K v) 0)
               (or (and (= K 0) (= (+ (- |tmp'0|) tmp) 0)
                          (= (+ (- |v'0|) v) 0) (= (+ (- |x'0|) x) 0)
                          (= (+ (- |counter'0|) counter 1) 0))
                     (and (<= (+ (- K) 1) 0) (<= (+ counter -3) 0)
                            (<= (+ y (- x) 1) 0) (<= (+ (- u) 1) 0)
                            (<= (+ (- y) 1) 0) (<= (- v) 0)
                            (<= (- counter) 0) (<= (+ (- b) 1) 0)
                            (<= (+ (- a) 1) 0)
                            (= (+ |tmp'0| (- |counter'0|) 1) 0)
                            (<= (+ (- |v'0|) u) 0) (<= (+ |counter'0| -5) 0)
                            (<= (+ (- |x'0|) 1) 0)
                            (<= (+ (- |counter'0|) 2) 0) (<= (+ (- u) 1) 0)
                            (<= (+ (- y) 1) 0) (<= (+ (- b) 1) 0)
                            (<= (+ (- a) 1) 0))) (<= (- K) 0)
               (<= (+ (- |x'0|) 1) 0) (<= (+ (- u) 1) 0) (<= (+ (- y) 1) 0)
               (<= (- |v'0|) 0) (<= (+ (- |counter'0|) 1) 0)
               (<= (+ (- b) 1) 0) (<= (+ (- a) 1) 0)
               (or (and (<= (+ |counter'0| -4) 0)
                          (= (+ (- uninterp) uninterp2 uninterp3) 0)
                          (<= (+ |x'0| (- y)) 0))
                     (<= (+ (- |counter'0|) 5) 0))
               (= (+ (- |counter'1|) K0 |counter'0| 1) 0)
               (<= (+ |y'0| K0 (- y)) 0) (<= (+ (- |u'0|) u) 0)
               (or (and (= K0 0) (= (+ (- |tmp___0'0|) tmp___0) 0)
                          (= (+ (- |u'0|) u) 0) (= (+ (- |y'0|) y) 0)
                          (= (+ (- |counter'1|) |counter'0| 1) 0))
                     (and (<= (+ (- K0) 1) 0) (<= (+ |counter'0| -3) 0)
                            (<= (+ (- |x'0|) 1) 0) (<= (+ (- u) 1) 0)
                            (<= (+ |x'0| (- y) 1) 0) (<= (- |v'0|) 0)
                            (<= (- |counter'0|) 0) (<= (+ (- b) 1) 0)
                            (<= (+ (- a) 1) 0)
                            (= (+ |tmp___0'0| (- |counter'1|) 1) 0)
                            (<= (+ (- |u'0|) |v'0| 1) 0)
                            (<= (+ |counter'1| -5) 0) (<= (+ (- |y'0|) 1) 0)
                            (<= (+ (- |counter'1|) 2) 0)
                            (<= (+ (- |x'0|) 1) 0) (<= (- |v'0|) 0)
                            (<= (+ (- b) 1) 0) (<= (+ (- a) 1) 0)))
               (<= (- K0) 0) (<= (+ (- |x'0|) 1) 0) (<= (+ (- |u'0|) 1) 0)
               (<= (+ (- |y'0|) 1) 0) (<= (- |v'0|) 0)
               (<= (+ (- |counter'1|) 1) 0) (<= (+ (- b) 1) 0)
               (<= (+ (- a) 1) 0)
               (or (and (<= (+ |counter'1| -4) 0)
                          (= (+ uninterp4 uninterp5 (- uninterp)) 0)
                          (<= (+ |y'0| (- |x'0|)) 0))
                     (<= (+ (- |counter'1|) 5) 0))
               (= (+ |tmp___1'| (- counter)) 0)
               (= (+ |tmp___0'| (- |counter'1|)) 0)
               (= (+ |tmp'| (- |counter'0|)) 0) (= (+ |v'| (- |v'0|)) 0)
               (= (+ |u'| (- |u'0|)) 0) (= (+ |y'| (- |y'0|)) 0)
               (= (+ |x'| (- |x'0|)) 0)
               (= (+ |counter'| (- |counter'1|) -1) 0)
               (<= (+ 1 (- uninterp5)) 0) (<= (+ |x'0| (- uninterp5)) 0)
               (<= (+ |u'0| (- uninterp5)) 0) (<= (- uninterp4) 0)
               (<= (+ |v'0| (- uninterp4)) 0) (<= (+ 1 (- uninterp3)) 0)
               (<= (+ u (- uninterp3)) 0) (<= (+ |x'0| (- uninterp3)) 0)
               (<= (- uninterp2) 0) (<= (+ |v'0| (- uninterp2)) 0)
               (<= (+ 1 (- uninterp1)) 0) (<= (+ x (- uninterp1)) 0)
               (<= (+ u (- uninterp1)) 0) (<= (- uninterp0) 0)
               (<= (+ v (- uninterp0)) 0) (<= (+ 1 (- uninterp)) 0)
               (<= (+ b (- uninterp)) 0) (<= (+ a (- uninterp)) 0)
               (= (- (+ (- uninterp) uninterp0 uninterp1)) 0)
               (= (+ term_to_project_onto6_integralized
                       (- (+ |counter'| (- counter)))) 0)
               (= (+ term_to_project_onto5_integralized (- (+ |x'| (- x)))) 0)
               (= (+ term_to_project_onto4_integralized (- (+ |y'| (- y)))) 0)
               (= (+ term_to_project_onto3_integralized (- (+ |u'| (- u)))) 0)
               (= (+ term_to_project_onto2_integralized (- (+ |v'| (- v)))) 0)
               (= (+ term_to_project_onto1_integralized
                       (- (+ |tmp'| (- tmp)))) 0)
               (= (+ term_to_project_onto0_integralized
                       (- (+ |tmp___0'| (- tmp___0)))) 0)
               (= (+ term_to_project_onto_integralized
                       (- (+ |tmp___1'| (- tmp___1)))) 0)))