(declare-const |j'0| Int)
(declare-const i Int)
(declare-const n Int)
(declare-const |tmp'0| Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const |k'0| Int)
(declare-const |k'| Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const k Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const |tmp'| Int)
(declare-const |i'| Int)
(declare-const j Int)
(declare-const |j'| Int)
(declare-const tmp Int)
(declare-const term_to_project_onto2_integralized Int)
(declare-const K Int)
(assert (and (<= (- i) 0) (<= (+ (- n) i 1) 0) (= (+ (- |j'0|) K (* 2 i)) 0)
               (or (and (= K 0) (= (+ (- |tmp'0|) tmp) 0)
                          (= (+ (- |k'0|) k) 0) (= (+ (- |j'0|) (* 2 i)) 0))
                     (and (<= (+ (- K) 1) 0) (<= (- i) 0) (<= (- i) 0)
                            (<= (+ (- n) (* 2 i) 1) 0) (= (+ |k'0| (- n)) 0)
                            (<= (+ (- |j'0|) 1) 0) (<= (- i) 0)
                            (<= (+ |j'0| (- n)) 0))) (<= (- K) 0)
               (<= (- |j'0|) 0) (<= (- i) 0) (<= (+ (- n) 1) 0)
               (<= (+ (- |j'0|) n) 0) (= (+ |tmp'| (- |tmp'0|)) 0)
               (= (+ |k'| (- |k'0|)) 0) (= (+ |j'| (- |j'0|)) 0)
               (= (+ |i'| (- i) -1) 0)
               (= (+ term_to_project_onto2_integralized (- (+ |i'| (- i)))) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |j'| (- j)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |k'| (- k)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |tmp'| (- tmp)))) 0)))
(check-sat)