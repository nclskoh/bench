(declare-const b Int)
(declare-const |x'| Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const y Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const counter Int)
(declare-const uninterp Int)
(declare-const rem Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const term_to_project_onto3_integralized Int)
(declare-const a Int)
(declare-const x Int)
(declare-const term_to_project_onto2_integralized Int)
(declare-const phi_y Int)
(declare-const phi_z Int)
(declare-const |z'| Int)
(declare-const |y'| Int)
(declare-const |counter'| Int)
(declare-const |tmp'| Int)
(declare-const uninterp0 Int)
(declare-const tmp Int)
(declare-const z Int)
(assert (and (<= (- y) 0) (<= (- counter) 0) (<= (+ (- b) 1) 0)
               (<= (+ counter -4) 0) (= (+ z (- uninterp) uninterp0) 0)
               (or (<= (+ y 1) 0) (<= (+ (- y) 1) 0))
               (or (and (or (<= y 0)
                              (and (<= (- rem) 0)
                                     (or (<= rem 0) (<= (+ (- rem) 2) 0))
                                     (or (<= (+ rem -1) 0) (<= (+ rem 1) 0))
                                     (is_int (* (/ 1 2) (+ y (- rem))))))
                          (= (+ (- phi_y) y) 0) (= (+ (- phi_z) z) 0))
                     (and (is_int (* (/ 1 2) (+ y -1))) (<= (- y) 0)
                            (= (+ (- phi_y) y -1) 0) (= (+ (- phi_z) x z) 0)))
               (= (+ |tmp'| (- counter)) 0) (= (+ |z'| (- phi_z)) 0)
               (= (+ (ite (and (<= (- phi_y) 0) (<= (- phi_y) 0))
                          (mod phi_y 2) (+ (mod phi_y 2) -2)) (* 2 |y'|)
                       (- phi_y)) 0) (= (+ |x'| (* -2 x)) 0)
               (= (+ |counter'| (- counter) -1) 0) (<= (+ x (- uninterp0)) 0)
               (<= (+ a (- uninterp)) 0)
               (= (+ term_to_project_onto3_integralized
                       (- (+ |counter'| (- counter)))) 0)
               (= (+ term_to_project_onto2_integralized (- (+ |x'| (- x)))) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |y'| (- y)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |z'| (- z)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |tmp'| (- tmp)))) 0)))
(check-sat)