(declare-const |i'0| Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const lh Int)
(declare-const n Int)
(declare-const |rh'0| Int)
(declare-const |rh'| Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const |lh'| Int)
(declare-const i Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const rh Int)
(declare-const |i'| Int)
(declare-const K Int)
(assert (and (<= (- lh) 0) (<= (+ (- n) lh 1) 0) (= (+ (- |i'0|) K lh 1) 0)
               (or (and (= K 0) (= (+ (- |i'0|) lh 1) 0)
                          (= (+ (- |rh'0|) lh) 0))
                     (and (<= (+ (- K) 1) 0) (<= (- lh) 0) (<= (- lh) 0)
                            (<= (+ (- n) lh 2) 0) (<= (+ (- |i'0|) 2) 0)
                            (<= (- |rh'0|) 0) (<= (+ |i'0| (- n)) 0)))
               (<= (- K) 0) (<= (- |rh'0|) 0) (<= (+ (- |i'0|) 1) 0)
               (<= (+ (- n) 1) 0) (<= (+ (- |i'0|) n) 0)
               (= (+ |i'| (- |i'0|)) 0) (= (+ |rh'| (- |rh'0|)) 0)
               (= (+ |lh'| (- lh) -1) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |lh'| (- lh)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |rh'| (- rh)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |i'| (- i)))) 0)))
(check-sat)