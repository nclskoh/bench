(declare-const n Int)
(declare-const x Int)
(declare-const y Int)
(declare-const a Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const uninterp0 Int)
(declare-const |z'| Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const uninterp1 Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const uninterp2 Int)
(declare-const |x'| Int)
(declare-const |n'| Int)
(declare-const |y'| Int)
(declare-const uninterp Int)
(declare-const term_to_project_onto2_integralized Int)
(declare-const z Int)
(assert (and (<= (- x) 0) (<= (+ (- y) 1) 0) (<= (- n) 0) (<= (+ (- z) 1) 0)
               (<= (- a) 0) (= (+ (- z) (* 6 n) 6) 0) (= (+ z (* -6 n) -6) 0)
               (= (+ (* -3 uninterp) (* -3 n) y -1) 0)
               (= (+ (- uninterp0) x) 0)
               (= (+ (* 2 z) uninterp1 (* -12 y) (* -18 x) -6) 0)
               (= (+ uninterp2 (* -6 z) (* -12 y) 12) 0) (<= (+ (- a) n) 0)
               (= (+ |z'| (- z) -6) 0) (= (+ |y'| (- z) (- y)) 0)
               (= (+ |x'| (- y) (- x)) 0) (= (+ |n'| (- n) -1) 0)
               (<= (+ 36 (- uninterp2)) 0) (<= (+ (* 6 z) (- uninterp2)) 0)
               (<= (+ (* 6 z) (- uninterp2)) 0) (<= (+ 6 (- uninterp1)) 0)
               (<= (+ (* 6 y) (- uninterp1)) 0) (<= (+ z (- uninterp1)) 0)
               (<= (- uninterp0) 0) (<= (- uninterp) 0)
               (= (- (+ -18 (* 72 uninterp) (* 54 uninterp0) (* -3 uninterp1)
                          uninterp2)) 0)
               (= (+ term_to_project_onto2_integralized (- (+ |n'| (- n)))) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |x'| (- x)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |y'| (- y)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |z'| (- z)))) 0)))
(check-sat)