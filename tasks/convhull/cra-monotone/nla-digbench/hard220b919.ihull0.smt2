(declare-const B Int)
(declare-const term_to_project_onto0 Real)
(declare-const A Int)
(declare-const r Int)
(declare-const p Int)
(declare-const uninterp Int)
(declare-const |d'| Int)
(declare-const |p'| Int)
(declare-const term_to_project_onto Real)
(declare-const d Int)
(declare-const q Int)
(assert (and (<= (+ (- p) 1) 0) (<= (+ (- d) 1) 0) (= q 0) (<= (+ (- B) 1) 0)
               (= (+ (- B) 1) 0) (= (+ (- r) A) 0) (= q 0) (= (+ d (- p)) 0)
               (= q 0) (= (+ r (- A)) 0) (= (+ d (- uninterp)) 0)
               (<= (+ (- r) d) 0) (= (+ |p'| (* -2 p)) 0)
               (= (+ |d'| (* -2 d)) 0) (<= 1 uninterp) (<= p uninterp)
               (<= B uninterp) (<= uninterp p)
               (= term_to_project_onto0 (+ |d'| (- d)))
               (= term_to_project_onto (+ |p'| (- p)))))
(check-sat)
