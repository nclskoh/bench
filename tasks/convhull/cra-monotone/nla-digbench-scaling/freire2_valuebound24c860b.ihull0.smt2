(declare-const r Int)
(declare-const term_to_project_onto Real)
(declare-const uninterp0 Int)
(declare-const a Real)
(declare-const x Real)
(declare-const uninterp1 Real)
(declare-const |s'| Real)
(declare-const |x'| Real)
(declare-const uninterp Int)
(declare-const |r'| Int)
(declare-const term_to_project_onto0 Real)
(declare-const term_to_project_onto1 Real)
(declare-const s Real)
(assert (and (<= (- x) 0) (< (- s) 0) (<= (+ (- r) 1) 0) (<= (- a) 0)
               (= (+ (* -12 uninterp) (* 4 s) -1) 0)
               (= (+ (* -4 a) (* 4 uninterp0) (* -6 uninterp) (* 3 r) (* 
                       4 x) -1) 0)
               (= (+ (* -24 a) (* 16 r) (* 8 uninterp1) (* -12 s) (* 24 x) -3) 0)
               (< (+ s (- x)) 0) (= (+ |s'| (* -6 r) (- s) -3) 0)
               (= (+ |x'| s (- x)) 0) (= (+ |r'| (- r) -1) 0)
               (<= (/ 1 4) uninterp1) (<= s uninterp1)
               (<= (* (/ 1 4) r) uninterp1) (<= 1 uninterp0) (<= r uninterp0)
               (<= r uninterp0) (<= uninterp uninterp0) (<= r uninterp0)
               (<= 1 uninterp) (<= r uninterp) (<= r uninterp)
               (= term_to_project_onto1 (+ |r'| (- r)))
               (= term_to_project_onto0 (+ |x'| (- x)))
               (= term_to_project_onto (+ |s'| (- s)))))
(check-sat)
