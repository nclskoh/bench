(declare-const x Int)
(declare-const term_to_project_onto Real)
(declare-const |x'| Int)
(declare-const y Int)
(declare-const c Int)
(declare-const uninterp Int)
(declare-const |c'| Int)
(declare-const term_to_project_onto1 Real)
(declare-const uninterp0 Int)
(declare-const uninterp1 Int)
(declare-const term_to_project_onto0 Real)
(declare-const uninterp2 Int)
(declare-const |y'| Int)
(declare-const k Int)
(assert (and (<= (- c) 0) (<= (- y) 0) (= (+ y (- c)) 0)
               (= (+ (* -30 x) (* 6 uninterp1) (* 15 uninterp0)
                       (* 10 uninterp2) (- y)) 0) (<= (+ (- k) c 1) 0)
               (= (+ |c'| (- c) -1) 0)
               (= (+ |x'| (- x) (- uninterp0) (* -4 uninterp2)
                       (* -6 uninterp) (* -4 y) -1) 0)
               (= (+ |y'| (- y) -1) 0) (<= 0 uninterp2) (<= 0 uninterp1)
               (<= 0 uninterp0) (<= 0 uninterp)
               (= term_to_project_onto1 (+ |y'| (- y)))
               (= term_to_project_onto0 (+ |x'| (- x)))
               (= term_to_project_onto (+ |c'| (- c)))))
(check-sat)
