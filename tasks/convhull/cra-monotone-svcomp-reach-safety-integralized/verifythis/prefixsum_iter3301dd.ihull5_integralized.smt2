(declare-const left Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const term_to_project_onto_integralized Int)
(assert (exists
         ((|space'?1?1| Int) (|left'?2?2| Int) (K?3?3 Int) (|left'?4?4| Int)
            (n?5?5 Int) (space?6?6 Int))
         (and (<= (+ (- space?6?6) 1) 0) (<= (+ (- n?5?5) space?6?6 1) 0)
                (<= (+ (- |left'?2?2|) (* 2 K?3?3) space?6?6 -1) 0)
                (or (and (= K?3?3 0) (= (+ (- |left'?2?2|) space?6?6 -1) 0))
                      (and (<= (+ (- K?3?3) 1) 0) (<= (+ (- space?6?6) 1) 0)
                             (<= (+ (- n?5?5) space?6?6) 0)
                             (<= (+ (- space?6?6) 1) 0)
                             (<= (+ (- |left'?2?2|) (* 2 space?6?6)) 0)
                             (<= (+ (- space?6?6) 1) 0)
                             (<= (+ |left'?2?2| (- n?5?5) (* -2 space?6?6) 1) 0)))
                (<= (- K?3?3) 0) (<= (- |left'?2?2|) 0)
                (<= (+ (- n?5?5) 1) 0) (<= (+ (- space?6?6) 1) 0)
                (<= (+ (- |left'?2?2|) n?5?5) 0)
                (= (+ |left'?4?4| (- |left'?2?2|)) 0)
                (= (+ |space'?1?1| (* -2 space?6?6)) 0)
                (= (+ term_to_project_onto0_integralized
                        (- (+ |space'?1?1| (- space?6?6)))) 0)
                (= (+ term_to_project_onto_integralized
                        (- (+ |left'?4?4| (- left)))) 0))))