(declare-const c Int)
(declare-const |e'| Int)
(declare-const term_to_project_onto1 Real)
(declare-const term_to_project_onto2 Real)
(declare-const |f'0| Int)
(declare-const |d'| Int)
(declare-const e Int)
(declare-const term_to_project_onto Real)
(declare-const |f'| Int)
(declare-const K Int)
(declare-const |d'0| Int)
(declare-const |c'| Int)
(declare-const term_to_project_onto0 Real)
(declare-const |e'0| Int)
(declare-const f Int)
(declare-const d Int)
(assert (and (<= (+ (- f) 1) 0) (<= (+ (- e) 1) 0) (<= (+ (- d) 1) 0)
               (<= (- c) 0) (<= (+ c -5) 0) (= (+ (- |d'0|) K) 0)
               (<= (+ |f'0| (* -5 K) (- f)) 0)
               (<= (+ |e'0| (* -5 K) (- e)) 0)
               (or (and (= K 0) (= (+ (- |f'0|) f) 0) (= (+ (- |e'0|) e) 0)
                          (= (- |d'0|) 0))
                     (and (<= (+ (- K) 1) 0) (<= (+ (- f) 1) 0)
                            (<= (+ (- e) 1) 0) (= (+ |e'0| -6) 0)
                            (= (+ |f'0| -6) 0) (<= (+ |d'0| -6) 0)
                            (<= (+ (- |d'0|) 1) 0))) (<= (- K) 0)
               (<= (+ (- |f'0|) 1) 0) (<= (+ (- |e'0|) 1) 0) (<= (- |d'0|) 0)
               (<= (+ (- |d'0|) 6) 0) (= (+ |f'| (- |f'0|)) 0)
               (= (+ |e'| (- |e'0|)) 0) (= (+ |d'| (- |d'0|)) 0)
               (= (+ |c'| (- c) -1) 0)
               (= term_to_project_onto2 (+ |c'| (- c)))
               (= term_to_project_onto1 (+ |d'| (- d)))
               (= term_to_project_onto0 (+ |e'| (- e)))
               (= term_to_project_onto (+ |f'| (- f)))))
(check-sat)
