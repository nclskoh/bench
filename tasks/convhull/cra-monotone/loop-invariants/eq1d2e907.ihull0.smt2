(declare-const w Int)
(declare-const |y'| Int)
(declare-const term_to_project_onto1 Real)
(declare-const |w'| Int)
(declare-const phi_x Int)
(declare-const term_to_project_onto Real)
(declare-const phi_y Int)
(declare-const |x'| Int)
(declare-const havoc0 Int)
(declare-const phi_w Int)
(declare-const havoc Int)
(declare-const phi_z Int)
(declare-const term_to_project_onto3 Real)
(declare-const tmp___2 Int)
(declare-const |z'| Int)
(declare-const |tmp___2'| Int)
(declare-const term_to_project_onto0 Real)
(declare-const x Int)
(declare-const z Int)
(declare-const y Int)
(declare-const term_to_project_onto2 Real)
(assert (and (<= (- x) 0) (<= (- w) 0) (= (+ w (- x)) 0) (= (+ (- z) y) 0)
               (<= (- havoc) 0)
               (or (<= (+ havoc 1) 0) (<= (+ (- havoc) 1) 0))
               (<= (- havoc0) 0)
               (or (and (= havoc0 0) (= (+ (- phi_w) w) 0)
                          (= (+ (- phi_x) x) 0) (= (+ (- phi_y) y -1) 0)
                          (= (+ (- phi_z) z -1) 0))
                     (and (or (<= (+ havoc0 1) 0) (<= (+ (- havoc0) 1) 0))
                            (= (+ (- phi_w) w 1) 0) (= (+ (- phi_x) x 1) 0)
                            (= (+ (- phi_y) y) 0) (= (+ (- phi_z) z) 0)))
               (= (+ |tmp___2'| (- havoc)) 0) (= (+ |z'| (- phi_z)) 0)
               (= (+ |y'| (- phi_y)) 0) (= (+ |x'| (- phi_x)) 0)
               (= (+ |w'| (- phi_w)) 0)
               (= term_to_project_onto3 (+ |w'| (- w)))
               (= term_to_project_onto2 (+ |x'| (- x)))
               (= term_to_project_onto1 (+ |y'| (- y)))
               (= term_to_project_onto0 (+ |z'| (- z)))
               (= term_to_project_onto (+ |tmp___2'| (- tmp___2)))))
(check-sat)
