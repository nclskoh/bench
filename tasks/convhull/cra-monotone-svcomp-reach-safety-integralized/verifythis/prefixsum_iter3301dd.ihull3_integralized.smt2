(declare-const right Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const term_to_project_onto_integralized Int)
(assert (exists
         ((|space'?1?1| Int) (|right'?2?2| Int) (K?3?3 Int)
            (|right'?4?4| Int) (space?5?5 Int) (n?6?6 Int) (remainder?7 Int)
            (quotient?8 Int))
         (and (<= (+ (- space?5?5) 1) 0)
                (<= (+ (- |right'?2?2|) (* 2 K?3?3) (* 2 space?5?5) -1) 0)
                (or (and (= K?3?3 0)
                           (= (+ (- |right'?2?2|) (* 2 space?5?5) -1) 0))
                      (and (<= (+ (- K?3?3) 1) 0) (<= (+ (- space?5?5) 1) 0)
                             (<= (+ (- space?5?5) 1) 0)
                             (<= (+ (- n?6?6) (* 2 space?5?5)) 0)
                             (<= (+ (- |right'?2?2|) (* 2 space?5?5) 1) 0)
                             (<= (+ (- space?5?5) 1) 0)
                             (<= (+ (- n?6?6) |right'?2?2| (* -2 space?5?5) 1) 0)))
                (<= (- K?3?3) 0) (<= (+ (- |right'?2?2|) 1) 0)
                (<= (+ (- space?5?5) 1) 0) (<= (+ n?6?6 (- |right'?2?2|)) 0)
                (= (+ (ite (and (<= (- space?5?5) 0) (<= (- space?5?5) 0))
                           remainder?7 (+ remainder?7 -2)) (* 2 |space'?1?1|)
                        (- space?5?5)) 0)
                (= (+ |right'?4?4| (- |right'?2?2|)) 0)
                (= (+ term_to_project_onto0_integralized
                        (- (+ |right'?4?4| (- right)))) 0)
                (= (+ term_to_project_onto_integralized
                        (- (+ |space'?1?1| (- space?5?5)))) 0)
                (= space?5?5 (+ (* 2 quotient?8) remainder?7))
                (<= 0 remainder?7)
                (or (<= remainder?7 (+ 2 -1)) (<= remainder?7 (+ -2 -1))))))
(check-sat)