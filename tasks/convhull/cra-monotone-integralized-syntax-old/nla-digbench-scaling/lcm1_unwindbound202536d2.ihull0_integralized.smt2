(declare-const y Int)
(declare-const |counter'| Int)
(declare-const x Int)
(declare-const u Int)
(declare-const counter Int)
(declare-const tmp___0 Int)
(declare-const a Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const uninterp1 Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const uninterp Int)
(declare-const term_to_project_onto2_integralized Int)
(declare-const uninterp0 Int)
(declare-const |u'| Int)
(declare-const |y'| Int)
(declare-const |tmp___0'| Int)
(declare-const b Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const v Int)
(assert (and (<= (+ (- x) 1) 0) (<= (+ (- u) 1) 0) (<= (+ (- y) 1) 0)
               (<= (- v) 0) (<= (+ (- counter) 1) 0) (<= (+ (- b) 1) 0)
               (<= (+ (- a) 1) 0) (<= (+ counter -19) 0)
               (= (+ (- uninterp) uninterp0 uninterp1) 0)
               (<= (+ (- y) x 1) 0) (= (+ |tmp___0'| (- counter)) 0)
               (= (+ |u'| (- v) (- u)) 0) (= (+ |y'| (- y) x) 0)
               (= (+ |counter'| (- counter) -1) 0) (<= (+ 1 (- uninterp1)) 0)
               (<= (+ x (- uninterp1)) 0) (<= (+ u (- uninterp1)) 0)
               (<= (- uninterp0) 0) (<= (+ (* 2 v) (- uninterp0)) 0)
               (<= (+ 1 (- uninterp)) 0) (<= (+ b (- uninterp)) 0)
               (<= (+ a (- uninterp)) 0)
               (= (- (+ (- uninterp) uninterp0 uninterp1)) 0)
               (= (+ term_to_project_onto2_integralized
                       (- (+ |counter'| (- counter)))) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |y'| (- y)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |u'| (- u)))) 0)
               (= (+ term_to_project_onto_integralized
                       (- (+ |tmp___0'| (- tmp___0)))) 0)))