(declare-const y Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const v Int)
(declare-const z Int)
(declare-const K Int)
(declare-const |v'| Int)
(declare-const |z'| Int)
(declare-const |y'| Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const |v'0| Int)
(declare-const |z'0| Int)
(assert (and (<= (- v) 0) (<= (- z) 0) (<= (- y) 0) (<= (+ y -9) 0)
               (= (+ (- |z'0|) K) 0) (<= (+ |v'0| (* -10 K) (- v)) 0)
               (or (and (= K 0) (= (+ (- |v'0|) v) 0) (= (- |z'0|) 0))
                     (and (<= (+ (- K) 1) 0) (<= (- v) 0) (= (+ |v'0| -10) 0)
                            (<= (+ |z'0| -10) 0) (<= (+ (- |z'0|) 1) 0)))
               (<= (- K) 0) (<= (- |v'0|) 0) (<= (- |z'0|) 0)
               (<= (+ (- |z'0|) 10) 0) (= (+ |v'| (- |v'0|)) 0)
               (= (+ |z'| (- |z'0|)) 0) (= (+ |y'| (- y) -1) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |y'| (- y)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |z'| (- z)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |v'| (- v)))) 0)))
(check-sat)