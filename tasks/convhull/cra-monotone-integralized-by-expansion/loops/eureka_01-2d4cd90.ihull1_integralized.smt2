(declare-const tr3 Int)
(declare-const y Int)
(declare-const edgecount Int)
(declare-const i Int)
(declare-const tr1 Int)
(declare-const tr0 Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const |x'| Int)
(declare-const |y'| Int)
(declare-const tr Int)
(declare-const x Int)
(declare-const |i'| Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const tr2 Int)
(assert (and (<= (+ (- edgecount) 1) 0) (<= (- i) 0)
               (= (+ (- edgecount) 20) 0) (<= (+ i (- edgecount) 1) 0)
               (<= (+ (- tr3) (- tr2) tr1) 0) (= (+ |i'| (- i) -1) 0)
               (= (+ (- tr0) |y'|) 0) (= (+ (- tr) |x'|) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |x'| (- x)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |y'| (- y)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |i'| (- i)))) 0)))
(check-sat)