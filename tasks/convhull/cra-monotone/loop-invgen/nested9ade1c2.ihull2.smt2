(declare-const term_to_project_onto0 Real)
(declare-const |k'0| Int)
(declare-const |i'| Int)
(declare-const term_to_project_onto1 Real)
(declare-const |j'| Int)
(declare-const i Int)
(declare-const |k'| Int)
(declare-const K Int)
(declare-const term_to_project_onto Real)
(declare-const j Int)
(declare-const k Int)
(declare-const |j'0| Int)
(declare-const n Int)
(assert (and (<= (- i) 0) (<= (+ (- n) i 1) 0) (= (+ (- |j'0|) K (* 2 i)) 0)
               (or (and (= K 0) (= (+ (- |k'0|) k) 0)
                          (= (+ (- |j'0|) (* 2 i)) 0))
                     (and (<= (+ (- K) 1) 0) (<= (- i) 0) (<= (+ (- i) 1) 0)
                            (<= (+ (- i) 1) 0) (<= (+ (- n) 1) 0)
                            (<= (+ (* -2 n) i -1) 0) (<= (+ (- |k'0|) i) 0)
                            (<= (+ (- |k'0|) |j'0| -1) 0) (<= (+ (- i) 1) 0)
                            (<= (+ (* 3 |k'0|) (* -2 |j'0|) (* -3 i) 2) 0)
                            (<= (+ (* 2 |k'0|) (- |j'0|) (* -3 i) 2) 0)
                            (<= (+ (- n) 1) 0)
                            (<= (+ (* 5 |k'0|) (* -3 |j'0|) (- n) (* -5 i) 4) 0)
                            (<= (+ |k'0| (* -2 n) (- i) -1) 0))) (<= 
               (- K) 0) (<= (- |j'0|) 0) (<= (- i) 0) (<= (+ (- n) 1) 0)
               (<= (+ (- |j'0|) (* 3 i)) 0) (= (+ |k'| (- |k'0|)) 0)
               (= (+ |j'| (- |j'0|)) 0) (= (+ |i'| (- i) -1) 0)
               (= term_to_project_onto1 (+ |i'| (- i)))
               (= term_to_project_onto0 (+ |j'| (- j)))
               (= term_to_project_onto (+ |k'| (- k)))))
(check-sat)
