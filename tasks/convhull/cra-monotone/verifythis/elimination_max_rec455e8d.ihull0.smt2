(declare-const param3@width Int)
(declare-const phi_y Int)
(declare-const term_to_project_onto7 Real)
(declare-const |param1@pos'| Int)
(declare-const tr2 Int)
(declare-const type_err Int)
(declare-const param1 Int)
(declare-const tr0 Int)
(declare-const type_err0 Int)
(declare-const |param3@pos'| Int)
(declare-const type_err2 Int)
(declare-const term_to_project_onto10 Real)
(declare-const term_to_project_onto Real)
(declare-const type_err4 Int)
(declare-const phi_tmp Int)
(declare-const |param2'| Int)
(declare-const param3@pos Int)
(declare-const term_to_project_onto4 Real)
(declare-const |param1@width'| Int)
(declare-const param1@pos Int)
(declare-const param2@width Int)
(declare-const type_err3 Int)
(declare-const tr1 Int)
(declare-const param1@width Int)
(declare-const |param3@width'| Int)
(declare-const param3 Int)
(declare-const term_to_project_onto1 Real)
(declare-const |param0@width'| Int)
(declare-const |param2@pos'| Int)
(declare-const param2 Int)
(declare-const param0@pos Int)
(declare-const phi_x Int)
(declare-const tr Int)
(declare-const param0 Int)
(declare-const |param0'| Int)
(declare-const term_to_project_onto0 Real)
(declare-const param2@pos Int)
(declare-const |param3'| Int)
(declare-const |param1'| Int)
(declare-const |param2@width'| Int)
(declare-const type_err1 Int)
(declare-const term_to_project_onto2 Real)
(declare-const term_to_project_onto6 Real)
(declare-const term_to_project_onto8 Real)
(declare-const term_to_project_onto3 Real)
(declare-const |param0@pos'| Int)
(declare-const term_to_project_onto5 Real)
(declare-const param0@width Int)
(declare-const phi_tmp0 Int)
(declare-const term_to_project_onto9 Real)
(assert (and (<= (+ (- param1) param0 1) 0)
               (or (and (<= (- param0) 0)
                          (or (and (<= (+ param3 (- param1)) 0)
                                     (= (- phi_tmp) 0))
                                (and (<= (+ (- param3) param1 1) 0)
                                       (= (+ (- phi_tmp) 1) 0)))
                          (= (+ (- phi_tmp0) phi_tmp) 0))
                     (and (<= (+ param0 1) 0) (= (- phi_tmp0) 0)))
               (or (<= (+ phi_tmp0 1) 0) (<= (+ (- phi_tmp0) 1) 0))
               (or (and (<= (+ (- tr0) tr 1) 0) (= (+ (- phi_x) param0) 0)
                          (= (+ (- phi_y) param1 -1) 0))
                     (and (<= (+ (- tr2) tr1) 0) (= (+ (- phi_x) param0 1) 0)
                            (= (+ (- phi_y) param1) 0)))
               (= (+ (- type_err4) |param3@width'|) 0)
               (= (+ (- param2@width) |param2@width'|) 0)
               (= (+ (- type_err3) |param1@width'|) 0)
               (= (+ (- type_err2) |param0@width'|) 0)
               (= (+ (- type_err1) |param3@pos'|) 0)
               (= (+ (- param2@pos) |param2@pos'|) 0)
               (= (+ (- type_err0) |param1@pos'|) 0)
               (= (+ (- type_err) |param0@pos'|) 0)
               (= (+ |param3'| (- param3)) 0) (= (+ (- param2) |param2'|) 0)
               (= (+ |param1'| (- phi_y)) 0) (= (+ |param0'| (- phi_x)) 0)
               (= term_to_project_onto10 (+ |param0'| (- param0)))
               (= term_to_project_onto9 (+ |param1'| (- param1)))
               (= term_to_project_onto8 (+ |param2'| (- param2)))
               (= term_to_project_onto7 (+ |param3'| (- param3)))
               (= term_to_project_onto6 (+ |param0@pos'| (- param0@pos)))
               (= term_to_project_onto5 (+ |param1@pos'| (- param1@pos)))
               (= term_to_project_onto4 (+ |param2@pos'| (- param2@pos)))
               (= term_to_project_onto3 (+ |param3@pos'| (- param3@pos)))
               (= term_to_project_onto2 (+ |param0@width'| (- param0@width)))
               (= term_to_project_onto1 (+ |param1@width'| (- param1@width)))
               (= term_to_project_onto0 (+ |param2@width'| (- param2@width)))
               (= term_to_project_onto (+ |param3@width'| (- param3@width)))))
(check-sat)
