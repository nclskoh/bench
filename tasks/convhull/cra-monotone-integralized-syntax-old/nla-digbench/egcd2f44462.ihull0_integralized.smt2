(declare-const a Int)
(declare-const uninterp8 Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const k Int)
(declare-const c Int)
(declare-const y Int)
(declare-const s Int)
(declare-const uninterp Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const q Int)
(declare-const |c'| Int)
(declare-const uninterp2 Int)
(declare-const r Int)
(declare-const uninterp0 Int)
(declare-const uninterp4 Int)
(declare-const uninterp1 Int)
(declare-const uninterp5 Int)
(declare-const uninterp7 Int)
(declare-const |k'| Int)
(declare-const uninterp3 Int)
(declare-const x Int)
(declare-const uninterp6 Int)
(declare-const p Int)
(declare-const b Int)
(assert (and (<= (- k) 0) (<= (- c) 0) (<= (+ (- a) 1) 0) (<= (+ (- b) 1) 0)
               (<= (+ (- y) 1) 0) (<= (+ (- x) 1) 0)
               (= (+ a (- c) (- uninterp)) 0)
               (= (+ (- uninterp0) (- uninterp1) a) 0)
               (= (+ (- uninterp2) (- uninterp3) b) 0)
               (= (+ (- uninterp2) uninterp5 (- uninterp3) uninterp7
                       (- uninterp8) b) 0) (<= (+ b (- c)) 0)
               (= (+ |k'| (- k) -1) 0) (= (+ |c'| b (- c)) 0)
               (<= (+ 1 (- uninterp8)) 0) (<= (+ b (- uninterp8)) 0)
               (<= (+ y (- uninterp8)) 0) (<= (+ q (- uninterp7)) 0)
               (<= (+ 1 (- uninterp6)) 0) (<= (+ y (- uninterp6)) 0)
               (<= (+ x (- uninterp6)) 0) (<= (+ s (- uninterp5)) 0)
               (<= (+ 1 (- uninterp4)) 0) (<= (+ y (- uninterp4)) 0)
               (<= (+ y (- uninterp4)) 0) (<= (+ s (- uninterp3)) 0)
               (<= (+ q (- uninterp2)) 0) (<= (+ r (- uninterp1)) 0)
               (<= (+ p (- uninterp0)) 0) (<= (- uninterp) 0)
               (<= (+ k (- uninterp)) 0)
               (= (- (+ (- uninterp5) (- uninterp7) uninterp8)) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |c'| (- c)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |k'| (- k)))) 0)))
(check-sat)