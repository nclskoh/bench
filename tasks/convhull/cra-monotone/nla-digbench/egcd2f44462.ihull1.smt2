(declare-const x Int)
(declare-const |k'| Int)
(declare-const term_to_project_onto2 Real)
(declare-const |c'| Int)
(declare-const K Int)
(declare-const |k'0| Int)
(declare-const uninterp8 Int)
(declare-const uninterp10 Int)
(declare-const |r'| Int)
(declare-const b Int)
(declare-const |p'| Int)
(declare-const term_to_project_onto3 Real)
(declare-const c Int)
(declare-const term_to_project_onto4 Real)
(declare-const |c'0| Int)
(declare-const term_to_project_onto5 Real)
(declare-const uninterp0 Int)
(declare-const term_to_project_onto0 Real)
(declare-const |a'| Int)
(declare-const uninterp5 Int)
(declare-const term_to_project_onto6 Real)
(declare-const term_to_project_onto Real)
(declare-const uninterp6 Int)
(declare-const r Int)
(declare-const k Int)
(declare-const uninterp4 Int)
(declare-const uninterp3 Int)
(declare-const |b'| Int)
(declare-const |q'| Int)
(declare-const p Int)
(declare-const uninterp1 Int)
(declare-const uninterp9 Int)
(declare-const uninterp7 Int)
(declare-const uninterp Int)
(declare-const q Int)
(declare-const |s'| Int)
(declare-const term_to_project_onto1 Real)
(declare-const s Int)
(declare-const a Int)
(declare-const uninterp2 Int)
(declare-const y Int)
(assert (and (<= (- k) 0) (<= (- c) 0) (<= (+ (- a) 1) 0) (<= (- b) 0)
               (<= (+ (- y) 1) 0) (<= (+ (- x) 1) 0)
               (or (<= (+ b 1) 0) (<= (+ (- b) 1) 0)) (= (+ (- |k'0|) K) 0)
               (<= (+ |c'0| K (- a)) 0)
               (or (and (= K 0) (= (- |k'0|) 0) (= (+ (- |c'0|) a) 0))
                     (and (<= (+ (- K) 1) 0) (<= (+ b (- a)) 0)
                            (<= (+ r p (- a)) 0) (<= (+ q s (- b)) 0)
                            (<= (+ (- b) 1) 0) (<= (+ (- y) 1) 0)
                            (<= (+ (- x) 1) 0)
                            (<= (+ |c'0| |k'0| b (- a) -1) 0)
                            (<= (+ (- |k'0|) 1) 0) (<= (- |c'0|) 0)
                            (<= (+ r p (- a)) 0) (<= (+ q s (- b)) 0)
                            (<= (+ (- b) 1) 0) (<= (+ (- y) 1) 0)
                            (<= (+ (- x) 1) 0))) (<= (- K) 0)
               (<= (- |k'0|) 0) (<= (- |c'0|) 0) (<= (+ (- a) 1) 0)
               (<= (+ (- b) 1) 0) (<= (+ (- y) 1) 0) (<= (+ (- x) 1) 0)
               (= (+ (- |c'0|) (- uninterp) a) 0)
               (= (+ (- uninterp0) (- uninterp1) a) 0)
               (= (+ (- uninterp2) (- uninterp3) b) 0)
               (= (+ (- uninterp2) uninterp5 (- uninterp3) uninterp7
                       (- uninterp8) b) 0) (<= (+ |c'0| (- b) 1) 0)
               (= (+ |k'| (- |k'0|)) 0) (= (+ |c'| (- |c'0|)) 0)
               (= (+ |s'| (- r) uninterp9) 0) (= (+ |r'| (- s)) 0)
               (= (+ |q'| (- p) uninterp10) 0) (= (+ |p'| (- q)) 0)
               (= (+ |b'| (- |c'0|)) 0) (= (+ |a'| (- b)) 0) (<= 1 uninterp8)
               (<= b uninterp8) (<= y uninterp8) (<= q uninterp7)
               (<= 1 uninterp6) (<= y uninterp6) (<= x uninterp6)
               (<= s uninterp5) (<= 1 uninterp4) (<= y uninterp4)
               (<= y uninterp4) (<= s uninterp3) (<= q uninterp2)
               (<= r uninterp1) (<= p uninterp0) (<= 0 uninterp)
               (<= |k'0| uninterp)
               (= 0 (+ (- uninterp5) (- uninterp7) uninterp8))
               (= term_to_project_onto6 (+ |a'| (- a)))
               (= term_to_project_onto5 (+ |b'| (- b)))
               (= term_to_project_onto4 (+ |p'| (- p)))
               (= term_to_project_onto3 (+ |q'| (- q)))
               (= term_to_project_onto2 (+ |r'| (- r)))
               (= term_to_project_onto1 (+ |s'| (- s)))
               (= term_to_project_onto0 (+ |c'| (- c)))
               (= term_to_project_onto (+ |k'| (- k)))))
(check-sat)
