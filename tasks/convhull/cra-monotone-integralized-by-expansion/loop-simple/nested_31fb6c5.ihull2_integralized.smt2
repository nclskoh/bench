(declare-const a Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const c Int)
(declare-const b Int)
(declare-const K Int)
(declare-const |c'| Int)
(declare-const |b'| Int)
(declare-const |a'| Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const |c'0| Int)
(declare-const |b'0| Int)
(assert (and (<= (+ (- c) 1) 0) (<= (+ (- b) 1) 0) (<= (- a) 0)
               (<= (+ a -5) 0) (= (+ (- |b'0|) K) 0)
               (<= (+ |c'0| (* -5 K) (- c)) 0)
               (or (and (= K 0) (= (+ (- |c'0|) c) 0) (= (- |b'0|) 0))
                     (and (<= (+ (- K) 1) 0) (<= (+ (- c) 1) 0)
                            (= (+ |c'0| -6) 0) (<= (+ |b'0| -6) 0)
                            (<= (+ (- |b'0|) 1) 0))) (<= (- K) 0)
               (<= (+ (- |c'0|) 1) 0) (<= (- |b'0|) 0) (<= (+ (- |b'0|) 6) 0)
               (= (+ |c'| (- |c'0|)) 0) (= (+ |b'| (- |b'0|)) 0)
               (= (+ |a'| (- a) -1) 0)
               (= (+ term_to_project_onto1_integralized (- (+ |a'| (- a)))) 0)
               (= (+ term_to_project_onto0_integralized (- (+ |b'| (- b)))) 0)
               (= (+ term_to_project_onto_integralized (- (+ |c'| (- c)))) 0)))
(check-sat)