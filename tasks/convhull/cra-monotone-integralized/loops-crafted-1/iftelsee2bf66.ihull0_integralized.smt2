(declare-const k Int)
(declare-const i Int)
(declare-const j Int)
(declare-const phi_k Int)
(declare-const rem Int)
(declare-const |i'| Int)
(declare-const term_to_project_onto0_integralized Int)
(declare-const |j'| Int)
(declare-const term_to_project_onto1_integralized Int)
(declare-const |k'| Int)
(declare-const phi_j Int)
(declare-const term_to_project_onto_integralized Int)
(declare-const n Int)
(assert (exists
         ((standardize_int?1 Int) (standardize_int?2 Int) (remainder?3 Int)
            (quotient?4 Int) (quotient_integralized?5 Int)
            (quotient_integralized?6 Int))
         (and (<= (- i) 0) (<= (- j) 0) (<= (- k) 0) (<= (- n) 0)
                (= (+ k j (- i)) 0) (<= (+ (- n) i 1) 0)
                (or (and (= standardize_int?1 quotient_integralized?5)
                           (<= (+ (- i) -3) 0) (= (+ (- phi_k) k 3) 0)
                           (= (+ (- phi_j) j) 0))
                      (and (or (<= (+ i 3) 0)
                                 (and (<= (- rem) 0)
                                        (or (<= (+ rem 1) 0)
                                              (<= (+ (- rem) 1) 0))
                                        (or (<= (+ rem -1) 0)
                                              (<= (+ rem 1) 0))
                                        (= standardize_int?2 quotient_integralized?6)))
                             (= (+ (- phi_k) k) 0) (= (+ (- phi_j) j 3) 0)))
                (or (<= n 0)
                      (and (<= (+ (- n) 1) 0)
                             (<= (+ (- (ite (and (<= (+ (- i) -3) 0)
                                                   (<= (- (+ i 3)) 0))
                                            remainder?3 (+ remainder?3 -2)))
                                      (- (* 2 phi_j)) i 3) 0)))
                (= (+ |j'| (- phi_j)) 0) (= (+ |k'| (- phi_k)) 0)
                (= (+ |i'| (- i) -3) 0)
                (= (+ term_to_project_onto1_integralized (- (+ |i'| (- i)))) 0)
                (= (+ term_to_project_onto0_integralized (- (+ |k'| (- k)))) 0)
                (= (+ term_to_project_onto_integralized (- (+ |j'| (- j)))) 0)
                (= (+ i 3) (+ (* 2 quotient?4) remainder?3))
                (<= 0 remainder?3)
                (or (<= remainder?3 (+ 2 -1)) (<= remainder?3 (+ -2 -1)))
                (= (+ (+ i 3) (- rem)) (* 2 quotient_integralized?6))
                (= (+ i 3) (* 2 quotient_integralized?5)))))