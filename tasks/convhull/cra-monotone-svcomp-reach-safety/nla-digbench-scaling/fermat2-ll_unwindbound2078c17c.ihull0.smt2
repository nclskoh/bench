(declare-const term_to_project_onto2 Real)
(declare-const term_to_project_onto3 Real)
(declare-const term_to_project_onto0 Real)
(declare-const term_to_project_onto1 Real)
(declare-const tmp Int)
(declare-const term_to_project_onto Real)
(assert (exists
         ((uninterp?1 Int) (uninterp?2 Int) (|tmp'?3| Int) (|r'?4| Int)
            (|v'?5| Int) (|u'?6| Int) (|counter'?7| Int) (phi_r?8 Int)
            (phi_v?9 Int) (phi_u?10 Int) (u?11 Int) (v?12 Int) (r?13 Int)
            (counter?14 Int) (A?15 Int))
         (and (<= (+ (- v?12) 1) 0) (<= (- counter?14) 0)
                (<= (+ (- A?15) 1) 0) (<= (+ counter?14 -19) 0)
                (= (+ (- uninterp?2) (* 2 u?11) (* 4 r?13) (* 4 A?15)
                        uninterp?1 (* -2 v?12)) 0)
                (or (<= (+ r?13 1) 0) (<= (+ (- r?13) 1) 0))
                (or (and (<= r?13 0) (= (+ (- phi_u?10) u?11 2) 0)
                           (= (+ (- phi_v?9) v?12) 0)
                           (= (+ (- phi_r?8) u?11 r?13) 0))
                      (and (<= (+ (- r?13) 1) 0) (= (+ (- phi_u?10) u?11) 0)
                             (= (+ (- phi_v?9) v?12 2) 0)
                             (= (+ (- phi_r?8) r?13 (- v?12)) 0)))
                (= (+ |tmp'?3| (- counter?14)) 0)
                (= (+ |r'?4| (- phi_r?8)) 0) (= (+ |v'?5| (- phi_v?9)) 0)
                (= (+ |u'?6| (- phi_u?10)) 0)
                (= (+ |counter'?7| (- counter?14) -1) 0) (<= 1 uninterp?1)
                (<= v?12 uninterp?1) (<= v?12 uninterp?1)
                (= term_to_project_onto3 (+ |counter'?7| (- counter?14)))
                (= term_to_project_onto2 (+ |u'?6| (- u?11)))
                (= term_to_project_onto1 (+ |v'?5| (- v?12)))
                (= term_to_project_onto0 (+ |r'?4| (- r?13)))
                (= term_to_project_onto (+ |tmp'?3| (- tmp))))))
(check-sat)
