(declare-const y Int)
(declare-const term_to_project_onto0 Real)
(declare-const |z'| Int)
(declare-const term_to_project_onto1 Real)
(declare-const v Int)
(declare-const |y'| Int)
(declare-const |v'0| Int)
(declare-const |v'| Int)
(declare-const K Int)
(declare-const term_to_project_onto Real)
(declare-const z Int)
(declare-const |z'0| Int)
(assert (and (<= (- v) 0) (<= (- z) 0) (<= (- y) 0) (<= (+ y -9) 0) (<= 
               K 0) (= K 0) (= (+ (- |v'0|) v) 0) (= (- |z'0|) 0)
               (<= (- K) 0) (<= (- |v'0|) 0) (<= (- |z'0|) 0)
               (<= (+ (- |z'0|) 10) 0) (= (+ |v'| (- |v'0|)) 0)
               (= (+ |z'| (- |z'0|)) 0) (= (+ |y'| (- y) -1) 0)
               (= term_to_project_onto1 (+ |y'| (- y)))
               (= term_to_project_onto0 (+ |z'| (- z)))
               (= term_to_project_onto (+ |v'| (- v)))))
(check-sat)
